Douloi Block Program
Version 1.41
33
TAxisGroup
0 {reference}
X_Motor
1
0
1
1
1
1
1
1
 4.00000000000000E+0002
 8.00000000000000E+0002
 8.00000000000000E+0002
FALSE
 4.36906666700000E+0003
256
FALSE
TAxisGroup
0 {reference}
Y_Motor
1
0
2
1
1
1
1
1
 4.00000000000000E+0002
 8.00000000000000E+0002
 8.00000000000000E+0002
FALSE
 4.36906666700000E+0003
256
FALSE
TAxisGroup
0 {reference}
Stepper
1
0
3
1
1
1
1
1
 3.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 5.12000000000000E+0004
256
FALSE
TAxisGroup
0 {reference}
StepperEncoder
1
0
4
1
1
1
1
1
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 6.55360000000000E+0004
256
FALSE
TAxisGroup
0 {reference}
Augar1
1
1
1
1
1
1
1
1
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_6
1
3
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_7
1
4
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_8
1
4
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_9
1
5
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_10
1
5
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_11
1
6
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_12
1
6
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_13
1
7
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_14
1
7
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_15
1
8
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_16
1
8
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_17
1
9
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_18
1
9
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_19
1
10
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_20
1
10
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_21
1
11
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_22
1
11
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_23
1
12
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_24
1
12
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_25
1
13
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_26
1
13
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_27
1
14
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_28
1
14
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_3
1
2
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_2
1
1
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_4
1
2
2
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
Remote_Motor_5
1
3
1
0
0
0
0
0
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 4.00000000000000E+0003
256
FALSE
TAxisGroup
0 {reference}
TestVirtualAxis
1
0
5
1
1
1
1
1
 1.00000000000000E+0000
 1.00000000000000E+0001
 1.00000000000000E+0001
FALSE
 5.12000000000000E+0004
256
FALSE
9
TNamedIO
0 {reference}
Sensor
16
1
8
FALSE
0   {persistent index}
TNamedIO
0 {reference}
A1
16
3
1
FALSE
0   {persistent index}
TNamedIO
0 {reference}
AOut
16
4
1
FALSE
0   {persistent index}
TNamedIO
0 {reference}
StartSignal
16
6
10
FALSE
0   {persistent index}
TNamedIO
0 {reference}
Augar_Distance
16
6
11
FALSE
0   {persistent index}
TNamedIO
0 {reference}
AOut3
48
4
1
FALSE
0   {persistent index}
TNamedIO
0 {reference}
LoadCell
16
3
1
FALSE
0   {persistent index}
TNamedIO
0 {reference}
Spin
16
6
28
FALSE
0   {persistent index}
TNamedIO
0 {reference}
Denester
16
6
30
FALSE
0   {persistent index}
1
TControlPlate
51 {reference}
Main
-5 0
1270 850
-16777211
Tahoma
1
-16777208
8
0
6
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDrag;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure DoubleClickLeft;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure Setup;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
5
function  CanClose:boolean;
  begin
  Park;
  CanClose:=true;
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
404 57 1993170 69 29
1
TStaticField
0 {reference}
9 7 62 21
nil

TRUE
Autostart
Autostart
FALSE
TRUE
FALSE
TBlock
0 {reference}
145 {ReferenceLink}
404 86 8388736 297 29
4
TPathNameField
0 {reference}
9 7 185 21
nil

TRUE
RP23_Configuration Assign_To
Main.RP23_Configuration.Assign_To
Main.RP23_Configuration.
Assign_To
TRUE
TRUE
TRUE
TStaticField
0 {reference}
188 7 221 21
nil

TRUE
Motor
(
T1AxisListField
0 {reference}
228 7 280 21
nil

TRUE
X_Motor
X_Motor
0
TRUE
TStaticField
0 {reference}
283 14 283 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
145 {ReferenceLink}
404 115 8388736 296 29
4
TPathNameField
0 {reference}
9 7 185 21
nil

TRUE
RP23_Configuration Assign_To
Main.RP23_Configuration.Assign_To
Main.RP23_Configuration.
Assign_To
TRUE
TRUE
TRUE
TStaticField
0 {reference}
188 7 221 21
nil

TRUE
Motor
(
T1AxisListField
0 {reference}
228 7 279 21
nil

TRUE
Y_Motor
Y_Motor
0
TRUE
TStaticField
0 {reference}
282 14 282 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
120 {ReferenceLink}
404 144 8388736 197 29
5
TPathNameField
0 {reference}
9 14 9 14
nil

TRUE

Main.SetCompensation
Main.
SetCompensation
FALSE
TRUE
TRUE
TStaticField
0 {reference}
12 14 12 14
nil

TRUE

(
T1AxisListField
0 {reference}
19 7 71 21
nil

TRUE
X_Motor
X_Motor
0
TRUE
TPathNameField
0 {reference}
74 7 175 21
nil

TRUE
SetCompensation

Main.
SetCompensation
TRUE
FALSE
FALSE
TStaticField
0 {reference}
178 14 178 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
120 {ReferenceLink}
404 173 8388736 196 29
5
TPathNameField
0 {reference}
9 14 9 14
nil

TRUE

Main.SetCompensation
Main.
SetCompensation
FALSE
TRUE
TRUE
TStaticField
0 {reference}
12 14 12 14
nil

TRUE

(
T1AxisListField
0 {reference}
19 7 70 21
nil

TRUE
Y_Motor
Y_Motor
0
TRUE
TPathNameField
0 {reference}
73 7 174 21
nil

TRUE
SetCompensation

Main.
SetCompensation
TRUE
FALSE
FALSE
TStaticField
0 {reference}
177 14 177 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
190 {ReferenceLink}
404 202 8388736 282 29
7
TPathNameField
0 {reference}
9 14 9 14
nil

TRUE

Main.SetLoopInversion
Main.
SetLoopInversion
FALSE
TRUE
TRUE
TStaticField
0 {reference}
12 14 12 14
nil

TRUE

(
T1AxisListField
0 {reference}
19 7 71 21
nil

TRUE
X_Motor
X_Motor
0
TRUE
TPathNameField
0 {reference}
74 7 173 21
nil

TRUE
SetLoopInversion

Main.
SetLoopInversion
TRUE
FALSE
FALSE
TStaticField
0 {reference}
176 7 206 21
nil

TRUE
State
,
TBooleanField
0 {reference}
213 7 258 21
nil
Boolean
TRUE
TRUE
True
False
TStaticField
0 {reference}
261 14 261 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
190 {ReferenceLink}
404 231 8388736 281 29
7
TPathNameField
0 {reference}
9 14 9 14
nil

TRUE

Main.SetLoopInversion
Main.
SetLoopInversion
FALSE
TRUE
TRUE
TStaticField
0 {reference}
12 14 12 14
nil

TRUE

(
T1AxisListField
0 {reference}
19 7 70 21
nil

TRUE
Y_Motor
Y_Motor
0
TRUE
TPathNameField
0 {reference}
73 7 172 21
nil

TRUE
SetLoopInversion

Main.
SetLoopInversion
TRUE
FALSE
FALSE
TStaticField
0 {reference}
175 7 205 21
nil

TRUE
State
,
TBooleanField
0 {reference}
212 7 257 21
nil
Boolean
TRUE
TRUE
True
False
TStaticField
0 {reference}
260 14 260 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
194 {ReferenceLink}
404 260 8388736 346 29
7
TPathNameField
0 {reference}
9 7 82 21
nil

TRUE
BiSS_Posital
Main.BiSS_Posital.Initialize
Main.BiSS_Posital.
Initialize
FALSE
TRUE
TRUE
TStaticField
0 {reference}
85 14 85 14
nil

TRUE

(
T1AxisListField
0 {reference}
92 7 144 21
nil

TRUE
X_Motor
X_Motor
0
TRUE
TPathNameField
0 {reference}
147 7 193 21
nil

TRUE
Initialize

Main.BiSS_Posital.
Initialize
TRUE
FALSE
FALSE
TStaticField
0 {reference}
196 7 282 21
nil

TRUE
Bits_In_Packet
,
TNumericField
0 {reference}
289 7 322 21
nil
Number
TRUE
 3.20000000000000E+0001
FALSE
TStaticField
0 {reference}
325 14 325 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
194 {ReferenceLink}
404 289 8388736 345 29
7
TPathNameField
0 {reference}
9 7 82 21
nil

TRUE
BiSS_Posital
Main.BiSS_Posital.Initialize
Main.BiSS_Posital.
Initialize
FALSE
TRUE
TRUE
TStaticField
0 {reference}
85 14 85 14
nil

TRUE

(
T1AxisListField
0 {reference}
92 7 143 21
nil

TRUE
Y_Motor
Y_Motor
0
TRUE
TPathNameField
0 {reference}
146 7 192 21
nil

TRUE
Initialize

Main.BiSS_Posital.
Initialize
TRUE
FALSE
FALSE
TStaticField
0 {reference}
195 7 281 21
nil

TRUE
Bits_In_Packet
,
TNumericField
0 {reference}
288 7 321 21
nil
Number
TRUE
 3.20000000000000E+0001
FALSE
TStaticField
0 {reference}
324 14 324 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
194 {ReferenceLink}
404 318 8388736 390 29
7
TPathNameField
0 {reference}
9 7 82 21
nil

TRUE
BiSS_Posital
Main.BiSS_Posital.Initialize
Main.BiSS_Posital.
Initialize
FALSE
TRUE
TRUE
TStaticField
0 {reference}
85 14 85 14
nil

TRUE

(
T1AxisListField
0 {reference}
92 7 188 21
nil

TRUE
StepperEncoder
StepperEncoder
0
TRUE
TPathNameField
0 {reference}
191 7 237 21
nil

TRUE
Initialize

Main.BiSS_Posital.
Initialize
TRUE
FALSE
FALSE
TStaticField
0 {reference}
240 7 326 21
nil

TRUE
Bits_In_Packet
,
TNumericField
0 {reference}
333 7 366 21
nil
Number
TRUE
 3.20000000000000E+0001
FALSE
TStaticField
0 {reference}
369 14 369 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
404 347 13921354 246 29
5
TStaticField
0 {reference}
9 14 9 14
nil

TRUE

SetCurrent(T1Axis(
T1AxisListField
0 {reference}
16 7 65 21
nil

TRUE
Stepper
Stepper
0
FALSE
TStaticField
0 {reference}
68 7 153 21
nil

TRUE
Set Current To 
),
TNumericField
0 {reference}
160 7 196 21
nil
Number
TRUE
 1.50000000000000E+0000
TRUE
TStaticField
0 {reference}
199 7 235 21
nil

TRUE
 Amps
);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
404 376 13921354 232 29
5
TStaticField
0 {reference}
9 14 9 14
nil

TRUE

SetCurrent(T1Axis(
T1AxisListField
0 {reference}
16 7 61 21
nil

TRUE
Augar1
Augar1
0
FALSE
TStaticField
0 {reference}
64 7 149 21
nil

TRUE
Set Current To 
),
TNumericField
0 {reference}
156 7 182 21
nil
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
185 7 221 21
nil

TRUE
 Amps
);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
404 405 6333684 60 29
1
TStaticField
0 {reference}
9 7 36 21
nil

TRUE
Yield
yield;
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
404 434 13921354 454 37
6
TNAxisListField
0 {reference}
13 11 62 25
nil

TRUE
Stepper
Stepper
0
TStaticField
0 {reference}
65 11 84 25
nil

TRUE
Set

TLocalListField
0 {reference}
91 11 183 25
nil

TRUE
Actual Position 
.SetActualPosition(
2
Actual Position 
.SetActualPosition(
Commanded Position 
.SetCommandedPosition(
TStaticField
0 {reference}
186 11 200 25
nil

TRUE
To

TNumericField
0 {reference}
203 7 432 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
607 441 13921354 229 23
3
T1AxisListField
0 {reference}
16 4 112 18
nil

TRUE
StepperEncoder
StepperEncoder
0
FALSE
TLocalListField
0 {reference}
119 4 208 18
nil

TRUE
Actual Position
.ActualPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
211 4 217 18
nil

TRUE
  

Number
Number
TRUE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
435 11 438 25
nil

TRUE
 
);
TRUE
TRUE
TRUE
TBlock
0 {reference}
260 {ReferenceLink}
404 471 8388736 249 29
4
TPathNameField
0 {reference}
9 7 138 21
nil

TRUE
PowerMonitor Initialize
Main.PowerMonitor.Initialize
Main.PowerMonitor.
Initialize
TRUE
TRUE
TRUE
TStaticField
0 {reference}
141 7 174 21
nil

TRUE
Motor
(
T1AxisListField
0 {reference}
181 7 232 21
nil

TRUE
Y_Motor
Y_Motor
0
TRUE
TStaticField
0 {reference}
235 14 235 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
TBlock_OnEvent
0 {reference}
0 {ReferenceLink}
977 83 1993170 282 37
2
TStaticField
0 {reference}
9 11 62 25
nil

TRUE
On Event 
OnEvent
TBooleanField
0 {reference}
65 7 270 30
TBooleanExpression
0 {reference}
0 {ReferenceLink}
1042 90 3937500 205 23
4
TStaticField
0 {reference}
15 4 60 18
nil

TRUE
Modbus

TModbusCoilListField
0 {reference}
67 4 134 18
nil

TRUE
StartSignal
StartSignal
0
TStaticField
0 {reference}
137 4 147 18
nil

TRUE
Is
.Is
TBooleanField
0 {reference}
154 4 189 18
nil
Boolean
TRUE
TRUE
On
Off
Boolean
Boolean
FALSE
TRUE
True
False
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
977 120 13921354 167 29
4
TNAxisListField
0 {reference}
13 7 58 21
nil

TRUE
Augar1
Augar1
0
TStaticField
0 {reference}
61 7 116 21
nil

TRUE
Set Motor
.SetMotor(
TBooleanField
0 {reference}
123 7 158 21
nil
Boolean
TRUE
TRUE
On
Off
TStaticField
0 {reference}
161 14 161 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
977 149 13921354 343 37
4
TNAxisListField
0 {reference}
13 11 58 25
nil

TRUE
Augar1
Augar1
0
TLocalListField
0 {reference}
65 11 116 25
nil

TRUE
Move By
.MoveBy(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
119 7 325 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
1096 156 3937500 206 23
3
TStaticField
0 {reference}
12 4 57 18
nil

TRUE
Modbus

TModbusWordOrNumberListField
0 {reference}
64 4 159 18
nil

TRUE
Augar_Distance
Augar_Distance
0
TStaticField
0 {reference}
162 4 194 18
nil

TRUE
Value
.Value
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
328 11 337 25
nil

TRUE
   
);
TRUE
TRUE
TRUE
TBlock
0 {reference}
0 {ReferenceLink}
977 186 3937500 214 29
5
TStaticField
0 {reference}
9 7 54 21
nil

TRUE
Modbus

TModbusCoilListField
0 {reference}
61 7 128 21
nil

TRUE
StartSignal
StartSignal
0
TStaticField
0 {reference}
131 7 157 21
nil

TRUE
Turn
.Turn(
TBooleanField
0 {reference}
164 7 200 21
nil
Boolean
TRUE
FALSE
On
Off
TStaticField
0 {reference}
203 14 203 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
TBlock_Procedure
254 {reference}
0 {ReferenceLink}
855 248 8388736 106 29
1
TStaticField
0 {reference}
9 7 99 21
nil

TRUE
Procedure Park
Park
FALSE
TRUE
FALSE
TBlock
0 {reference}
255 {ReferenceLink}
855 277 8388736 203 29
4
TPathNameField
0 {reference}
9 7 86 21
nil

TRUE
SafeZMoveTo
Main.SafeZMoveTo
Main.
SafeZMoveTo
TRUE
TRUE
TRUE
TStaticField
0 {reference}
89 7 153 21
nil

TRUE
Destination
(
TNumericField
0 {reference}
160 7 186 21
nil
Number
TRUE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
189 14 189 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
855 306 13921354 193 29
5
TNAxisListField
0 {reference}
13 7 65 21
nil

TRUE
X_Motor
X_Motor
0
TStaticField
0 {reference}
68 7 87 21
nil

TRUE
Set

TLocalListField
0 {reference}
94 7 137 21
nil

TRUE
Speed 
.SetSpeed(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
144 7 184 21
nil
Number
TRUE
 2.00000000000000E+0002
TRUE
TStaticField
0 {reference}
187 7 190 21
nil

TRUE
 
);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
855 335 13921354 192 29
5
TNAxisListField
0 {reference}
13 7 64 21
nil

TRUE
Y_Motor
Y_Motor
0
TStaticField
0 {reference}
67 7 86 21
nil

TRUE
Set

TLocalListField
0 {reference}
93 7 136 21
nil

TRUE
Speed 
.SetSpeed(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
143 7 183 21
nil
Number
TRUE
 2.00000000000000E+0002
TRUE
TStaticField
0 {reference}
186 7 189 21
nil

TRUE
 
);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
855 364 13921354 180 29
4
TNAxisListField
0 {reference}
13 7 65 21
nil

TRUE
X_Motor
X_Motor
0
TLocalListField
0 {reference}
72 7 123 21
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
130 7 170 21
nil
Number
TRUE
 1.00000000000000E+0002
TRUE
TStaticField
0 {reference}
173 7 182 21
nil

TRUE
   
);
TRUE
TRUE
TRUE
TBlock
0 {reference}
0 {ReferenceLink}
855 393 13921354 165 29
4
TNAxisListField
0 {reference}
13 7 64 21
nil

TRUE
Y_Motor
Y_Motor
0
TLocalListField
0 {reference}
71 7 122 21
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
129 7 155 21
nil
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
158 7 167 21
nil

TRUE
   
);
TRUE
TRUE
TRUE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
TBlock_Procedure
270 {reference}
0 {ReferenceLink}
1081 451 8388736 177 29
1
TStaticField
0 {reference}
9 7 170 21
nil

TRUE
Procedure Signal_Controller
Signal_Controller
FALSE
TRUE
FALSE
TBlock_C
0 {reference}
0 {ReferenceLink}
1081 480 6333684 120 405
1
TStaticField
0 {reference}
9 4 52 18
nil

TRUE
Forever
while true do
TRUE
FALSE
FALSE
nil
FALSE
FALSE
TBlock_C
0 {reference}
0 {ReferenceLink}
1106 503 6333684 356 181
3
TStaticField
0 {reference}
9 15 28 29
nil

TRUE
  If  
If 
TBooleanField
0 {reference}
31 7 311 38
TBooleanExpression
0 {reference}
0 {ReferenceLink}
1137 510 1226588 280 31
5
TStaticField
0 {reference}
19 15 19 15
nil

TRUE

(
TNumericField
0 {reference}
22 4 200 27
TNumericExpression
0 {reference}
0 {ReferenceLink}
1159 514 3937500 178 23
3
TStaticField
0 {reference}
12 4 57 18
nil

TRUE
Modbus

TModbusWordOrNumberListField
0 {reference}
64 4 131 18
nil

TRUE
StartSignal
StartSignal
0
TStaticField
0 {reference}
134 4 166 18
nil

TRUE
Value
.Value
Number
Number
TRUE
 0.00000000000000E+0000
TRUE
TLocalListField
0 {reference}
207 8 224 22
nil

TRUE
 = 
=
6
 > 
>
 >= 
>=
 < 
<
 <= 
<=
 = 
=
 <> 
<>
TNumericField
0 {reference}
231 8 257 22
nil
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
260 15 260 15
nil

TRUE

)
Boolean
Boolean
FALSE
TRUE
True
False
TStaticField
0 {reference}
314 15 339 29
nil

TRUE
then
 then
TRUE
TRUE
FALSE
TBlock_C
0 {reference}
0 {ReferenceLink}
1106 684 6333684 356 181
3
TStaticField
0 {reference}
9 15 28 29
nil

TRUE
  If  
If 
TBooleanField
0 {reference}
31 7 311 38
TBooleanExpression
0 {reference}
0 {ReferenceLink}
1137 691 1226588 280 31
5
TStaticField
0 {reference}
19 15 19 15
nil

TRUE

(
TNumericField
0 {reference}
22 4 200 27
TNumericExpression
0 {reference}
0 {ReferenceLink}
1159 695 3937500 178 23
3
TStaticField
0 {reference}
12 4 57 18
nil

TRUE
Modbus

TModbusWordOrNumberListField
0 {reference}
64 4 131 18
nil

TRUE
StartSignal
StartSignal
0
TStaticField
0 {reference}
134 4 166 18
nil

TRUE
Value
.Value
Number
Number
TRUE
 0.00000000000000E+0000
TRUE
TLocalListField
0 {reference}
207 8 224 22
nil

TRUE
 = 
=
6
 > 
>
 >= 
>=
 < 
<
 <= 
<=
 = 
=
 <> 
<>
TNumericField
0 {reference}
231 8 257 22
nil
Number
TRUE
 2.00000000000000E+0000
TRUE
TStaticField
0 {reference}
260 15 260 15
nil

TRUE

)
Boolean
Boolean
FALSE
TRUE
True
False
TStaticField
0 {reference}
314 15 339 29
nil

TRUE
then
 then
TRUE
TRUE
FALSE
nil
FALSE
FALSE
TBlock
0 {reference}
255 {ReferenceLink}
1131 729 8388736 203 29
4
TPathNameField
0 {reference}
9 7 86 21
nil

TRUE
SafeZMoveTo
Main.SafeZMoveTo
Main.
SafeZMoveTo
TRUE
TRUE
TRUE
TStaticField
0 {reference}
89 7 153 21
nil

TRUE
Destination
(
TNumericField
0 {reference}
160 7 186 21
nil
Number
TRUE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
189 14 189 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
1131 758 13921354 180 29
4
TNAxisListField
0 {reference}
13 7 65 21
nil

TRUE
X_Motor
X_Motor
0
TLocalListField
0 {reference}
72 7 123 21
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
130 7 170 21
nil
Number
TRUE
 2.64000000000000E+0002
TRUE
TStaticField
0 {reference}
173 7 182 21
nil

TRUE
   
);
TRUE
TRUE
TRUE
TBlock
0 {reference}
0 {ReferenceLink}
1131 787 13921354 186 29
4
TNAxisListField
0 {reference}
13 7 64 21
nil

TRUE
Y_Motor
Y_Motor
0
TLocalListField
0 {reference}
71 7 122 21
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
129 7 176 21
nil
Number
TRUE
 1.00000000000000E+0003
TRUE
TStaticField
0 {reference}
179 7 188 21
nil

TRUE
   
);
TRUE
TRUE
TRUE
TBlock
0 {reference}
0 {ReferenceLink}
1131 816 3937500 232 29
5
TStaticField
0 {reference}
9 7 54 21
nil

TRUE
Modbus

TModbusWordOrNumberListField
0 {reference}
61 7 128 21
nil

TRUE
StartSignal
StartSignal
0
TStaticField
0 {reference}
131 7 185 21
nil

TRUE
Set Value
.SetValue(
TNumericField
0 {reference}
192 7 218 21
nil
Number
TRUE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
221 14 221 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
TBlock
0 {reference}
255 {ReferenceLink}
1131 548 8388736 203 29
4
TPathNameField
0 {reference}
9 7 86 21
nil

TRUE
SafeZMoveTo
Main.SafeZMoveTo
Main.
SafeZMoveTo
TRUE
TRUE
TRUE
TStaticField
0 {reference}
89 7 153 21
nil

TRUE
Destination
(
TNumericField
0 {reference}
160 7 186 21
nil
Number
TRUE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
189 14 189 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
1131 577 13921354 180 29
4
TNAxisListField
0 {reference}
13 7 65 21
nil

TRUE
X_Motor
X_Motor
0
TLocalListField
0 {reference}
72 7 123 21
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
130 7 170 21
nil
Number
TRUE
 2.64000000000000E+0002
TRUE
TStaticField
0 {reference}
173 7 182 21
nil

TRUE
   
);
TRUE
TRUE
TRUE
TBlock
0 {reference}
0 {ReferenceLink}
1131 606 13921354 186 29
4
TNAxisListField
0 {reference}
13 7 64 21
nil

TRUE
Y_Motor
Y_Motor
0
TLocalListField
0 {reference}
71 7 122 21
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
129 7 176 21
nil
Number
TRUE
 1.00000000000000E+0003
TRUE
TStaticField
0 {reference}
179 7 188 21
nil

TRUE
   
);
TRUE
TRUE
TRUE
TBlock
0 {reference}
0 {ReferenceLink}
1131 635 3937500 232 29
5
TStaticField
0 {reference}
9 7 54 21
nil

TRUE
Modbus

TModbusWordOrNumberListField
0 {reference}
61 7 128 21
nil

TRUE
StartSignal
StartSignal
0
TStaticField
0 {reference}
131 7 185 21
nil

TRUE
Set Value
.SetValue(
TNumericField
0 {reference}
192 7 218 21
nil
Number
TRUE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
221 14 221 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
TComment
0 {reference}
0 {ReferenceLink}
1216 387 255 160 60
0
FALSE
1
Function to take in python cmds
2
Function to take in python 
cmds
nil
-88 -27  diagnostic marker
MMC-V Test Platform
104
TControlButton
0 {reference}
Jog__Button
200 310
290 340
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
465 77 1993170 89 29
1
TStaticField
0 {reference}
9 7 82 21
nil

TRUE
Mouse Down
MouseDown
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
465 106 13921354 144 29
4
T1AxisListField
0 {reference}
13 7 65 21
nil

TRUE
X_Motor
X_Motor
0
FALSE
TStaticField
0 {reference}
68 7 89 21
nil

TRUE
Jog
.Jog(
TNumericField
0 {reference}
96 7 129 21
nil
Number
TRUE
 1.00000000000000E+0001
TRUE
TStaticField
0 {reference}
132 7 138 21
nil

TRUE
  
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
TBlock_H
0 {reference}
0 {ReferenceLink}
467 260 1993170 72 29
1
TStaticField
0 {reference}
9 7 65 21
nil

TRUE
Mouse Up
MouseUp
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
467 289 13921354 150 29
3
TNAxisListField
0 {reference}
13 7 65 21
nil

TRUE
X_Motor
X_Motor
0
TLocalListField
0 {reference}
72 7 137 21
nil

TRUE
Begin Stop
.BeginStop;
2
Stop
.Stop;
Begin Stop
.BeginStop;
TStaticField
0 {reference}
140 7 149 21
nil

TRUE
   

TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Jog >
FALSE
TControlEditor
24 {reference}
GainEditor
200 230
290 253
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
461 98 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
137 {ReferenceLink}
461 127 8388736 364 45
7
TPathNameField
0 {reference}
9 22 9 22
nil

TRUE

Main.SetGain
Main.
SetGain
FALSE
TRUE
TRUE
TStaticField
0 {reference}
12 22 12 22
nil

TRUE

(
T1AxisListField
0 {reference}
19 15 71 29
nil

TRUE
X_Motor
X_Motor
0
TRUE
TPathNameField
0 {reference}
74 15 118 29
nil

TRUE
SetGain

Main.
SetGain
TRUE
FALSE
FALSE
TStaticField
0 {reference}
121 15 146 29
nil

TRUE
Gain
,
TNumericField
0 {reference}
149 7 332 38
TNumericExpression
0 {reference}
0 {ReferenceLink}
610 134 1226588 183 31
3
TStaticField
0 {reference}
12 8 45 22
nil

TRUE
round
round(
TNumericField
0 {reference}
48 4 168 27
TNumericExpression
0 {reference}
24 {ReferenceLink}
658 138 14053594 120 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 73 18
nil

TRUE
GainEditor
Main.GainEditor
Main.
GainEditor
TRUE
TRUE
TRUE
TStaticField
0 {reference}
76 4 108 18
nil

TRUE
Value
)
Number
Number
FALSE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
171 15 171 15
nil

TRUE

)
Number
Number
TRUE
 0.00000000000000E+0000
FALSE
TStaticField
0 {reference}
335 22 335 22
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
100
0
TControlEditor
25 {reference}
ZeroEditor
200 255
290 278
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  Axis[1].SetZero(ReadlnLongint);
  end;
TRUE
nil
0 0  diagnostic marker
232
0
TControlEditor
27 {reference}
KiEditor
200 280
290 303
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  Axis[1].SetIntegrator(ReadlnLongint);
  end;
TRUE
nil
0 0  diagnostic marker
0
0
TControlButton
0 {reference}
Enable_OnButton2
200 70
290 100
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
426 61 1993170 60 29
1
TStaticField
0 {reference}
9 7 37 21
nil

TRUE
Click
Click
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
426 90 13921354 174 29
4
TNAxisListField
0 {reference}
13 7 65 21
nil

TRUE
X_Motor
X_Motor
0
TStaticField
0 {reference}
68 7 123 21
nil

TRUE
Set Motor
.SetMotor(
TBooleanField
0 {reference}
130 7 165 21
nil
Boolean
TRUE
TRUE
On
Off
TStaticField
0 {reference}
168 14 168 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Motor On
FALSE
TControlStatic
97 {reference}
Text
200 130
290 153
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
464 110 1993170 277 37
2
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TNumericField
0 {reference}
44 7 265 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
508 117 13921354 221 23
3
T1AxisListField
0 {reference}
16 4 68 18
nil

TRUE
X_Motor
X_Motor
0
FALSE
TLocalListField
0 {reference}
75 4 200 18
nil

TRUE
Commanded Position
.CommandedPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
203 4 209 18
nil

TRUE
  

Number
Number
FALSE
 0.00000000000000E+0000
TRUE
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlStatic
132 {reference}
Text12
200 105
290 128
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
473 127 1993170 395 37
6
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TBooleanField
0 {reference}
44 7 199 30
TBooleanExpression
0 {reference}
0 {ReferenceLink}
517 134 13921354 155 23
2
TNAxisListField
0 {reference}
19 4 71 18
nil

TRUE
X_Motor
X_Motor
0
TStaticField
0 {reference}
74 4 139 18
nil

TRUE
Motor Is On
.MotorIsOn
Boolean
Boolean
FALSE
TRUE
True
False
TStaticField
0 {reference}
202 11 216 25
nil

TRUE
as
as
TStringField
0 {reference}
223 11 294 25
nil
String
TRUE
Motor On
TStaticField
0 {reference}
297 11 300 25
nil

TRUE
,
,
TStringField
0 {reference}
307 11 379 25
nil
String
TRUE
Motor Off
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

1
TControlPlate
144 {reference}
RP23_Configuration
1295 5
1550 50
-16777211
Tahoma
1
-16777208
8
0
6
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDrag;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure DoubleClickLeft;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure Setup;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
function  CanClose:boolean;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
496 77 1993170 69 29
1
TStaticField
0 {reference}
9 7 62 21
nil

TRUE
Autostart
Autostart
FALSE
TRUE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker
Electrocraft RP23
0
2
TUserProcedure
145 {reference}
TRUE
282
procedure Assign_To(Motor:T1Axis);
  begin
 { TMC4671 Initialization File }
  SPIAtPut(Motor,$1A,0); {disable output drive}
  SPIAtPut(Motor,1, $00000000);
  SPIAtPut(Motor,3, $00000001);
  SPIAtPut(Motor,4, $00100010);
  SPIAtPut(Motor,5, $20000000);
  SPIAtPut(Motor,6, $00000000);
  SPIAtPut(Motor,7, $014E014E);
  SPIAtPut(Motor,8, $010081A9);
  SPIAtPut(Motor,9, $010080E7);
  SPIAtPut(Motor,10, $18000100);
  SPIAtPut(Motor,11, $00000000);
  SPIAtPut(Motor,12, $00044400);
  SPIAtPut(Motor,13, $01000000);
  SPIAtPut(Motor,14, $01000000);
  SPIAtPut(Motor,15, $01000000);
  SPIAtPut(Motor,17, $03020100);
  SPIAtPut(Motor,23, $00000000);
  SPIAtPut(Motor,24, $00000F9F);
  SPIAtPut(Motor,25, $00000A0A);
  SPIAtPut(Motor,27, $00030008);
  SPIAtPut(Motor,28, $00000000);
  SPIAtPut(Motor,29, $00000000);
  SPIAtPut(Motor,30, $00000000);
  SPIAtPut(Motor,31, $00000000);
  SPIAtPut(Motor,32, $0000003C);
  SPIAtPut(Motor,33, $FFFFFFF6);
  SPIAtPut(Motor,34, $FFFFFFF6);
  SPIAtPut(Motor,35, $000080FE);
  SPIAtPut(Motor,36, $00000000);
  SPIAtPut(Motor,37, $00000000);
  SPIAtPut(Motor,38, $00010000);
  SPIAtPut(Motor,39, $0000FFFE);
  SPIAtPut(Motor,40, $0000FFFE);
  SPIAtPut(Motor,44, $00000000);
  SPIAtPut(Motor,45, $00010000);
  SPIAtPut(Motor,46, $00000000);
  SPIAtPut(Motor,47, $00000000);
  SPIAtPut(Motor,48, $00000000);
  SPIAtPut(Motor,51, $00000000);
  SPIAtPut(Motor,52, $2AAA0000);
  SPIAtPut(Motor,53, $80005555);
  SPIAtPut(Motor,54, $D555AAAA);
  SPIAtPut(Motor,55, $00000000);
  SPIAtPut(Motor,56, $00002AAA);
  SPIAtPut(Motor,59, $00000000);
  SPIAtPut(Motor,60, $00000000);
  SPIAtPut(Motor,62, $00000000);
  SPIAtPut(Motor,64, $00000001);
  SPIAtPut(Motor,66, $00000000);
  SPIAtPut(Motor,69, $00000000);
  SPIAtPut(Motor,78, $00000001);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000002);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000004);
  SPIAtPut(Motor,77, $20000000);
  SPIAtPut(Motor,78, $00000005);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000006);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000007);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000009);
  SPIAtPut(Motor,77, $3CDCA415);
  SPIAtPut(Motor,78, $0000000A);
  SPIAtPut(Motor,77, $E30FA9D7);
  SPIAtPut(Motor,78, $0000000C);
  SPIAtPut(Motor,77, $0004EC85);
  SPIAtPut(Motor,78, $0000000D);
  SPIAtPut(Motor,77, $0009D90A);
  SPIAtPut(Motor,78, $0000000E);
  SPIAtPut(Motor,77, $0004EC85);
  SPIAtPut(Motor,78, $0000000F);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000011);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000012);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000014);
  SPIAtPut(Motor,77, $20000000);
  SPIAtPut(Motor,78, $00000015);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000016);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000017);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000019);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $0000001A);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $0000001C);
  SPIAtPut(Motor,77, $20000000);
  SPIAtPut(Motor,78, $0000001D);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $0000001E);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $0000001F);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000020);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000021);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000028);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000029);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $0000002A);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $0000002B);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000032);
  SPIAtPut(Motor,77, $00001000);
  SPIAtPut(Motor,78, $00000033);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $00000034);
  SPIAtPut(Motor,77, $00000000);
  SPIAtPut(Motor,78, $0000003C);
  SPIAtPut(Motor,77, $00030000);
  SPIAtPut(Motor,78, $0000003D);
  SPIAtPut(Motor,77, $01000000);
  SPIAtPut(Motor,80, $00000000);
  SPIAtPut(Motor,81, $00000000);
  SPIAtPut(Motor,82, $00000005);
  SPIAtPut(Motor,84, $01000100);
  SPIAtPut(Motor,86, $01000100);
  SPIAtPut(Motor,88, $00000000);
  SPIAtPut(Motor,90, $00000000);
  SPIAtPut(Motor,92, $00000000);
  SPIAtPut(Motor,93, $00005A81);
  SPIAtPut(Motor,94, $00007FFF);
  SPIAtPut(Motor,95, $7FFFFFFF);
  SPIAtPut(Motor,96, $7FFFFFFF);
  SPIAtPut(Motor,97, $80000001);
  SPIAtPut(Motor,98, $7FFFFFFF);
  SPIAtPut(Motor,99, $00000001);
  SPIAtPut(Motor,100, $00000000);
  SPIAtPut(Motor,101, $00000000);
  SPIAtPut(Motor,102, $00000000);
  SPIAtPut(Motor,103, $00000000);
  SPIAtPut(Motor,104, $00000000);
  SPIAtPut(Motor,107, $066A2AAA);
  SPIAtPut(Motor,109, $00000000);
  SPIAtPut(Motor,111, $00000000);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000001);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000002);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000003);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000004);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000005);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000006);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000007);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000008);
  SPIAtPut(Motor,110, $FFDBFFD8);
  SPIAtPut(Motor,111, $00000009);
  SPIAtPut(Motor,110, $0000FFBC);
  SPIAtPut(Motor,111, $0000000A);
  SPIAtPut(Motor,110, $FFAE002D);
  SPIAtPut(Motor,111, $0000000B);
  SPIAtPut(Motor,110, $004C0036);
  SPIAtPut(Motor,111, $0000000C);
  SPIAtPut(Motor,110, $005F0035);
  SPIAtPut(Motor,111, $0000000D);
  SPIAtPut(Motor,110, $00560034);
  SPIAtPut(Motor,111, $0000000E);
  SPIAtPut(Motor,110, $0042FFEA);
  SPIAtPut(Motor,111, $0000000F);
  SPIAtPut(Motor,110, $FFF1FFF2);
  SPIAtPut(Motor,111, $00000010);
  SPIAtPut(Motor,110, $0000005D);
  SPIAtPut(Motor,111, $00000011);
  SPIAtPut(Motor,110, $00350032);
  SPIAtPut(Motor,111, $00000012);
  SPIAtPut(Motor,110, $0000FFCD);
  SPIAtPut(Motor,111, $00000013);
  SPIAtPut(Motor,110, $81D8811B);
  SPIAtPut(Motor,111, $00000014);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000015);
  SPIAtPut(Motor,110, $0000FFAF);
  SPIAtPut(Motor,111, $00000016);
  SPIAtPut(Motor,110, $0000FFD6);
  SPIAtPut(Motor,111, $00000017);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000018);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000019);
  SPIAtPut(Motor,110, $0000066A);
  SPIAtPut(Motor,111, $0000001A);
  SPIAtPut(Motor,110, $00002AAA);
  SPIAtPut(Motor,111, $0000001B);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $0000001C);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $0000001D);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $0000001E);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $0000001F);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000020);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000021);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000022);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000023);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000024);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000025);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000028);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $00000029);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $0000002A);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $0000002B);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $0000002C);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000C0);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000C1);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000C2);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000C3);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000C4);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000C5);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000C6);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000C7);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000C8);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000C9);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000CA);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000CB);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000D0);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000D1);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000D2);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000D3);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000D4);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000D5);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000D6);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,111, $000000D7);
  SPIAtPut(Motor,110, $00000000);
  SPIAtPut(Motor,116, $00000000);
  SPIAtPut(Motor,117, $FFFFFFFF);
  SPIAtPut(Motor,120, $00000000);
  SPIAtPut(Motor,121, $00009600);
  SPIAtPut(Motor,122, $00000000);
  SPIAtPut(Motor,123, $00000000);
  SPIAtPut(Motor,124, $F0280000);
  SPIAtPut(Motor,125, $00000000);
  SPIAtPut(Motor,$1A,7); {Enable centered PWM for FOC}
  Motor.SetMotorType((Motor.MotorType and $FFFD) or ServoDriveConfigured);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
26
procedure SPIAtPut(var anAxis:T1Axis; Address:longint; Value:longint);

  var SPIAddrStatus:integer; absolute $6000001A;
  var SPIData:longint; absolute $60000016;
  var IsPhysicalValue:longint;
  var Command:longint;

  begin
  IsPhysicalValue:=integer(anAxis.IsPhysical);
  if IsPhysicalValue=0 then
    begin
    end
  else if IsPhysicalValue=1 then
    begin
    repeat
    until SPIAddrStatus=1;
    SPIData:=Value;
    SPIAddrStatus:=$80 or Address;
    end
  else
    begin
    Command:=$2000 or IsPhysicalValue;
    NeighborCommunicationProcedureAxisIntegerLongintParam(Command,Address,Value);
    end;
  yield;
  end;
TRUE
-2134376448
TRUE
FALSE
1
TControlStatic
0 {reference}
Text16
55 130
190 153
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Commanded
2
TControlStatic
170 {reference}
Text5
200 155
290 178
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
464 110 1993170 241 37
2
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TNumericField
0 {reference}
44 7 229 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
508 117 13921354 185 23
3
T1AxisListField
0 {reference}
16 4 68 18
nil

TRUE
X_Motor
X_Motor
0
FALSE
TLocalListField
0 {reference}
75 4 164 18
nil

TRUE
Actual Position
.ActualPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
167 4 173 18
nil

TRUE
  

Number
Number
FALSE
 0.00000000000000E+0000
TRUE
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlStatic
0 {reference}
Text17
55 155
190 178
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Actual
2
TControlStatic
171 {reference}
Text18
200 180
290 203
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
464 110 1993170 219 37
2
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TNumericField
0 {reference}
44 7 207 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
508 117 13921354 178 23
3
T1AxisListField
0 {reference}
16 4 68 18
nil

TRUE
X_Motor
X_Motor
0
FALSE
TLocalListField
0 {reference}
75 4 157 18
nil

TRUE
Error Position
.ErrorPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
160 4 166 18
nil

TRUE
  

Number
Number
FALSE
 0.00000000000000E+0000
TRUE
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlStatic
0 {reference}
Text21
55 180
190 203
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Error
2
TControlStatic
0 {reference}
Text2
30 205
190 228
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Commanded Torque
2
TControlStatic
172 {reference}
Text22
200 205
290 228
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
464 110 1993170 188 37
2
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TNumericField
0 {reference}
44 7 176 30
TNumericExpression
0 {reference}
122 {ReferenceLink}
508 117 8388736 132 23
5
TPathNameField
0 {reference}
12 11 12 11
nil

TRUE

Main.Torque
Main.
Torque
FALSE
TRUE
TRUE
TStaticField
0 {reference}
15 11 15 11
nil

TRUE

(
T1AxisListField
0 {reference}
22 4 74 18
nil

TRUE
X_Motor
X_Motor
0
TRUE
TPathNameField
0 {reference}
77 4 117 18
nil

TRUE
Torque

Main.
Torque
TRUE
FALSE
FALSE
TStaticField
0 {reference}
120 11 120 11
nil

TRUE

)
Number
Number
FALSE
 0.00000000000000E+0000
TRUE
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlStatic
0 {reference}
Text3
30 230
190 253
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Gain (1 - 1000)
2
TControlStatic
0 {reference}
Text4
30 255
190 278
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Zero (230-254)
2
TControlStatic
0 {reference}
Text6
30 280
190 303
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Integrator (0 - Gain)
2
TControlPlate
185 {reference}
Scope
1310 240
1805 370
-16777194
Tahoma
1
-16777208
8
0
6
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDrag;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure DoubleClickLeft;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure Setup;
  begin
  Plotter.PopUp;
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
function  CanClose:boolean;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_Procedure
0 {reference}
0 {ReferenceLink}
625 47 8388736 194 29
1
TStaticField
0 {reference}
9 7 187 21
nil

TRUE
Procedure Record_Probe_Data
Record_Probe_Data
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
625 76 36095 317 37
5
TStaticField
0 {reference}
9 11 31 25
nil

TRUE
Set 

TNumericField
0 {reference}
34 7 94 30
TNumericExpression
0 {reference}
180 {ReferenceLink}
659 83 36095 60 23
1
TPathNameField
0 {reference}
12 4 46 18
nil

TRUE
Probe
Main.Scope.Probe
Main.Scope.
Probe
TRUE
TRUE
TRUE
Number
Number
FALSE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
97 11 114 25
nil

TRUE
 to 
:=
TNumericField
0 {reference}
117 7 287 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
742 83 13921354 185 23
3
T1AxisListField
0 {reference}
16 4 68 18
nil

TRUE
X_Motor
X_Motor
0
FALSE
TLocalListField
0 {reference}
75 4 164 18
nil

TRUE
Actual Position
.ActualPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
167 4 173 18
nil

TRUE
  

Number
Number
TRUE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
290 18 290 18
nil

TRUE

;
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
625 113 6333684 60 29
1
TStaticField
0 {reference}
9 7 36 21
nil

TRUE
Yield
yield;
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
TComment
0 {reference}
0 {ReferenceLink}
1042 41 255 274 102
0
FALSE
1
This block list is used by the scope to record your application data. Decide what you want plotted and provide that vlalue to the "Set" block for assignment of the probe. The delay block below identifies the scope sampling period. The scope has 200 points which can be adjusted on the console side.
6
This block list is used by the scope to record your 
application data. Decide what you want plotted and 
provide that vlalue to the "Set" block for assignment 
of the probe. The delay block below identifies the 
scope sampling period. The scope has 200 points 
which can be adjusted on the console side.
nil
0 0  diagnostic marker
Scope
5
TControlPlate
0 {reference}
Plotter
1310 245
1675 535
12639424
Tahoma
1
-16777208
8
0
6
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDrag;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
9
procedure MouseUp;
  begin
  TouchList.writeln(MousePosition.x,' ',MousePosition.y);
  SetLineStyle(dot);
  SetLineColor(black);
  DrawLine(MousePosition.x,-1000,MousePosition.x,1000);
  DrawLine(-1000,MousePosition.y,1000,MousePosition.y);
  SetLineStyle(solid);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure DoubleClickLeft;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure Setup;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
function  CanClose:boolean;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
693 133 1993170 60 29
1
TStaticField
0 {reference}
9 7 42 21
nil

TRUE
Setup
Setup
FALSE
TRUE
FALSE
TBlock
0 {reference}
178 {ReferenceLink}
693 162 14053594 253 29
6
TPathNameField
0 {reference}
9 7 115 21
nil

TRUE
Main Scope Status
Main.Scope.Status
Main.Scope.
Status
TRUE
TRUE
TRUE
TStaticField
0 {reference}
118 7 159 21
nil

TRUE
Writeln
.writeln(
TStringField
0 {reference}
166 7 170 21
nil
String
TRUE

TStaticField
0 {reference}
173 14 173 14
nil

TRUE

,
TStringField
0 {reference}
180 7 234 21
nil
String
TRUE
Ready
TStaticField
0 {reference}
237 14 237 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
TRUE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Plotter
0
4
TUserVariable
174 {reference}
TRUE
Index
Number
FALSE
10
1
0
TUserVariable
175 {reference}
TRUE
MinValue
Number
FALSE
10
1
0
TUserVariable
176 {reference}
TRUE
MaxValue
Number
FALSE
10
1
0
TUserVariable
177 {reference}
TRUE
Margin
Number
FALSE
10
1
0
1342177280
TRUE
FALSE
1
TControlButton
0 {reference}
TriggerButton
1680 275
1800 310
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  BeginTask(TaskAddr(Collect_And_Plot_Data));
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
Trigger
FALSE
TControlStatic
178 {reference}
Status
1680 245
1800 262
-16777211
Tahoma
1
-16777208
8
0
0
nil
0 0  diagnostic marker

0
TControlListBox
179 {reference}
TouchList
1680 315
1800 500
-16777211
Tahoma
1
-16777208
8
0
2
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure DoubleClick;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
1
FALSE
TRUE
TControlButton
0 {reference}
Clear_ListButton
1680 505
1800 535
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  begin
  TouchList.Clear;
  ShowPlots;
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
Clear Touches
FALSE
7
TUserVariable
180 {reference}
TRUE
Probe
Number
FALSE
10
1
0
TUserConstant
0 {reference}
FALSE
BufferSize
200
TUserVariable
181 {reference}
TRUE
Buffer
Number
TRUE
BufferSize
1
0
TUserVariable
182 {reference}
TRUE
Counter
Number
TRUE
10
1
0
TUserProcedure
183 {reference}
FALSE
15
procedure Collect_And_Plot_Data;
  
  var scanner:longint;

  begin
  Status.Clear;
  Status.writeln('Collecting...');
  for scanner:=1 to BufferSize do
    begin
    Record_Probe_Data;
    Buffer[scanner]:=Probe;
    end;

  ShowPlots;
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
9
procedure ShowPlots;
  begin
  Plotter.Clear;
  Status.writeln('Plotting...');
  Plotter.SetLineColor(red);
  Plotter.Fit(Buffer);
  Plotter.Plot(Buffer);
  Status.writeln('Ready');
  end;
TRUE
TUserProcedure
184 {reference}
TRUE
4
procedure Trigger_Data_Collection;
  begin
  BeginTask(TaskAddr(Collect_and_Plot_Data));
  end;
TRUE
1342177280
TRUE
FALSE
1
TControlPlate
198 {reference}
BiSS_Posital
1295 55
1475 105
-16777211
Tahoma
1
-16777208
8
0
6
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDrag;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure DoubleClickLeft;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure Setup;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
function  CanClose:boolean;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
BiSS Posital Encoder Support 1.02
0
4
TUserProcedure
194 {reference}
TRUE
27
procedure Initialize(var NoShowAxis:T1Axis; Bits_In_Packet:longint);

  var IsPhysicalValue:integer;

  begin
  IsPhysicalValue:=integer(NoShowAxis.IsPhysical);
  try
    begin
    if IsPhysicalValue <> 0 then
      NoShowAxis.SetMotorType((NoShowAxis.MotorType and $FFFD) or $400);
    end
  recover
    begin
    Prompter.writeln('BiSS Init Failure with value: ',NoShowAxis.MotorType or $400);
    {disregard if controller firmware does not support native serial encoders}
    end;

  if IsPhysicalValue=1 then
    begin
    Server.MemWriteWord($60000014,Bits_In_Packet);
    Server.MemWriteWord($60000010,$100); {turn off preset before enabling driver}
    Server.MemWriteWord($60000006,$201); {enable Drv13}
    end
  else
    NeighborCommunication.ProcedureAxisWord($1900 or IsPhysicalValue,Bits_In_Packet);
  end;

TRUE
TUserFunction
195 {reference}
FALSE
20
function ReadEncoderPosition(var anAxis:T1Axis):longint;
{------------------------------------------------------------------------------}
{ Requires that the controller be running a firmware image supporting BiSS in  }
{ hardware.                                                                    }
{______________________________________________________________________________}

  var IsPhysicalValue:integer;

  begin
  IsPhysicalValue:=integer(anAxis.IsPhysical);
  if IsPhysicalValue=1 then
    begin
    Server.MemWriteWord($60000012,0);
    ReadEncoderPosition:=Server.MemReadlongint($60000010);
    Server.MemWriteWord($60000012,1);
    end
  else
    ReadEncoderPosition:=NeighborCommunication.LongintFunctionNibbleParam($1A00 or (IsPhysicalValue and $F0));
  end;

TRUE
TUserProcedure
196 {reference}
TRUE
19
procedure Preset(var NoShowAxis:T1Axis);

  var IsPhysicalValue:integer;

  begin
  IsPhysicalValue:=integer(NoShowAxis.IsPhysical);
  if IsPhysicalValue=1 then
    begin
    Server.MemWriteWord($60000010,$101);
    delay(500);
    Server.MemWriteWord($60000010,$100);
    end
  else
    begin
    NeighborCommunication.ProcedureLongintWordParam($1B00 or (IsPhysicalValue and $F0),$60000010,$101);
    delay(500);
    NeighborCommunication.ProcedureLongintWordParam($1B00 or (IsPhysicalValue and $F0),$60000010,$100);
    end;
  end;
TRUE
TUserFunction
197 {reference}
TRUE
7
function Actual_Position(var NoShowAxis:T1Axis):double;
  begin
  if NoShowAxis.CoordinateInversionIsOn then
    Actual_Position:=-ReadEncoderPosition(NoShowAxis)/NoShowAxis.CountsPerUserUnit
  else
    Actual_Position:=ReadEncoderPosition(NoShowAxis)/NoShowAxis.CountsPerUserUnit
  end;
TRUE
-2134376448
TRUE
FALSE
1
TControlButton
0 {reference}
PresetButton
200 380
290 410
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
475 56 1993170 60 29
1
TStaticField
0 {reference}
9 7 37 21
nil

TRUE
Click
Click
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
475 85 13921354 175 29
4
TNAxisListField
0 {reference}
13 7 65 21
nil

TRUE
X_Motor
X_Motor
0
TStaticField
0 {reference}
68 7 123 21
nil

TRUE
Set Motor
.SetMotor(
TBooleanField
0 {reference}
130 7 166 21
nil
Boolean
TRUE
FALSE
On
Off
TStaticField
0 {reference}
169 14 169 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
196 {ReferenceLink}
475 114 8388736 207 29
5
TPathNameField
0 {reference}
9 7 82 21
nil

TRUE
BiSS_Posital
Main.BiSS_Posital.Preset
Main.BiSS_Posital.
Preset
FALSE
TRUE
TRUE
TStaticField
0 {reference}
85 14 85 14
nil

TRUE

(
T1AxisListField
0 {reference}
92 7 144 21
nil

TRUE
X_Motor
X_Motor
0
TRUE
TPathNameField
0 {reference}
147 7 185 21
nil

TRUE
Preset

Main.BiSS_Posital.
Preset
TRUE
FALSE
FALSE
TStaticField
0 {reference}
188 14 188 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Preset
FALSE
TControlStatic
0 {reference}
Text8
200 40
290 63
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
X
1
TControlStatic
0 {reference}
Text10
295 40
385 63
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Y
1
TControlButton
0 {reference}
Jog__Button3
200 345
290 375
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
465 77 1993170 89 29
1
TStaticField
0 {reference}
9 7 82 21
nil

TRUE
Mouse Down
MouseDown
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
465 106 13921354 148 29
4
T1AxisListField
0 {reference}
13 7 65 21
nil

TRUE
X_Motor
X_Motor
0
FALSE
TStaticField
0 {reference}
68 7 89 21
nil

TRUE
Jog
.Jog(
TNumericField
0 {reference}
96 7 133 21
nil
Number
TRUE
-1.00000000000000E+0001
TRUE
TStaticField
0 {reference}
136 7 142 21
nil

TRUE
  
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
TBlock_H
0 {reference}
0 {ReferenceLink}
467 260 1993170 72 29
1
TStaticField
0 {reference}
9 7 65 21
nil

TRUE
Mouse Up
MouseUp
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
467 289 13921354 150 29
3
TNAxisListField
0 {reference}
13 7 65 21
nil

TRUE
X_Motor
X_Motor
0
TLocalListField
0 {reference}
72 7 137 21
nil

TRUE
Begin Stop
.BeginStop;
2
Stop
.Stop;
Begin Stop
.BeginStop;
TStaticField
0 {reference}
140 7 149 21
nil

TRUE
   

TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Jog <
FALSE
TControlStatic
0 {reference}
Text7
110 415
190 438
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Set Speed
2
TControlEditor
201 {reference}
XSpeedEditor
200 415
290 438
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 85 13921354 293 37
5
TNAxisListField
0 {reference}
13 11 65 25
nil

TRUE
X_Motor
X_Motor
0
TStaticField
0 {reference}
68 11 87 25
nil

TRUE
Set

TLocalListField
0 {reference}
94 11 134 25
nil

TRUE
Speed
.SetSpeed(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
137 7 276 30
TNumericExpression
0 {reference}
201 {ReferenceLink}
625 92 14053594 139 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 92 18
nil

TRUE
XSpeedEditor
Main.XSpeedEditor
Main.
XSpeedEditor
TRUE
TRUE
TRUE
TStaticField
0 {reference}
95 4 127 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
279 11 282 25
nil

TRUE
 
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
-13 0  diagnostic marker
20
0
TControlStatic
0 {reference}
Text11
110 465
190 488
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Move To
2
TControlEditor
202 {reference}
XMoveToEditor
200 465
290 488
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 85 13921354 291 37
4
TNAxisListField
0 {reference}
13 11 65 25
nil

TRUE
X_Motor
X_Motor
0
TLocalListField
0 {reference}
72 11 123 25
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
126 7 273 30
TNumericExpression
0 {reference}
202 {ReferenceLink}
614 92 14053594 147 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 100 18
nil

TRUE
XMoveToEditor
Main.XMoveToEditor
Main.
XMoveToEditor
TRUE
TRUE
TRUE
TStaticField
0 {reference}
103 4 135 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
276 11 285 25
nil

TRUE
   
);
TRUE
TRUE
TRUE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
0
0
TControlButton
0 {reference}
Jog__Button2
295 310
385 340
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
465 77 1993170 89 29
1
TStaticField
0 {reference}
9 7 82 21
nil

TRUE
Mouse Down
MouseDown
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
465 106 13921354 143 29
4
T1AxisListField
0 {reference}
13 7 64 21
nil

TRUE
Y_Motor
Y_Motor
0
FALSE
TStaticField
0 {reference}
67 7 88 21
nil

TRUE
Jog
.Jog(
TNumericField
0 {reference}
95 7 128 21
nil
Number
TRUE
 1.00000000000000E+0001
TRUE
TStaticField
0 {reference}
131 7 137 21
nil

TRUE
  
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
TBlock_H
0 {reference}
0 {ReferenceLink}
467 260 1993170 72 29
1
TStaticField
0 {reference}
9 7 65 21
nil

TRUE
Mouse Up
MouseUp
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
467 289 13921354 149 29
3
TNAxisListField
0 {reference}
13 7 64 21
nil

TRUE
Y_Motor
Y_Motor
0
TLocalListField
0 {reference}
71 7 136 21
nil

TRUE
Begin Stop
.BeginStop;
2
Stop
.Stop;
Begin Stop
.BeginStop;
TStaticField
0 {reference}
139 7 148 21
nil

TRUE
   

TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Jog >
FALSE
TControlEditor
203 {reference}
GainEditor2
295 230
385 253
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
461 98 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
137 {ReferenceLink}
461 127 8388736 370 45
7
TPathNameField
0 {reference}
9 22 9 22
nil

TRUE

Main.SetGain
Main.
SetGain
FALSE
TRUE
TRUE
TStaticField
0 {reference}
12 22 12 22
nil

TRUE

(
T1AxisListField
0 {reference}
19 15 70 29
nil

TRUE
Y_Motor
Y_Motor
0
TRUE
TPathNameField
0 {reference}
73 15 117 29
nil

TRUE
SetGain

Main.
SetGain
TRUE
FALSE
FALSE
TStaticField
0 {reference}
120 15 145 29
nil

TRUE
Gain
,
TNumericField
0 {reference}
148 7 338 38
TNumericExpression
0 {reference}
0 {ReferenceLink}
609 134 1226588 190 31
3
TStaticField
0 {reference}
12 8 45 22
nil

TRUE
round
round(
TNumericField
0 {reference}
48 4 175 27
TNumericExpression
0 {reference}
203 {ReferenceLink}
657 138 14053594 127 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 80 18
nil

TRUE
GainEditor2
Main.GainEditor2
Main.
GainEditor2
TRUE
TRUE
TRUE
TStaticField
0 {reference}
83 4 115 18
nil

TRUE
Value
)
Number
Number
FALSE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
178 15 178 15
nil

TRUE

)
Number
Number
TRUE
 0.00000000000000E+0000
FALSE
TStaticField
0 {reference}
341 22 341 22
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
100
0
TControlEditor
204 {reference}
ZeroEditor2
295 255
385 278
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  Axis[2].SetZero(ReadlnLongint);
  end;
TRUE
nil
0 0  diagnostic marker
232
0
TControlEditor
205 {reference}
KiEditor2
295 280
385 303
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  Axis[2].SetIntegrator(ReadlnLongint);
  end;
TRUE
nil
0 0  diagnostic marker
0
0
TControlButton
0 {reference}
Enable_OnButton
295 70
385 100
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
426 61 1993170 60 29
1
TStaticField
0 {reference}
9 7 37 21
nil

TRUE
Click
Click
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
426 90 13921354 173 29
4
TNAxisListField
0 {reference}
13 7 64 21
nil

TRUE
Y_Motor
Y_Motor
0
TStaticField
0 {reference}
67 7 122 21
nil

TRUE
Set Motor
.SetMotor(
TBooleanField
0 {reference}
129 7 164 21
nil
Boolean
TRUE
TRUE
On
Off
TStaticField
0 {reference}
167 14 167 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Motor On
FALSE
TControlStatic
206 {reference}
Text13
295 130
385 153
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
464 110 1993170 276 37
2
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TNumericField
0 {reference}
44 7 264 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
508 117 13921354 220 23
3
T1AxisListField
0 {reference}
16 4 67 18
nil

TRUE
Y_Motor
Y_Motor
0
FALSE
TLocalListField
0 {reference}
74 4 199 18
nil

TRUE
Commanded Position
.CommandedPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
202 4 208 18
nil

TRUE
  

Number
Number
FALSE
 0.00000000000000E+0000
TRUE
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlStatic
207 {reference}
Text15
295 105
385 128
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
473 127 1993170 394 37
6
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TBooleanField
0 {reference}
44 7 198 30
TBooleanExpression
0 {reference}
0 {ReferenceLink}
517 134 13921354 154 23
2
TNAxisListField
0 {reference}
19 4 70 18
nil

TRUE
Y_Motor
Y_Motor
0
TStaticField
0 {reference}
73 4 138 18
nil

TRUE
Motor Is On
.MotorIsOn
Boolean
Boolean
FALSE
TRUE
True
False
TStaticField
0 {reference}
201 11 215 25
nil

TRUE
as
as
TStringField
0 {reference}
222 11 293 25
nil
String
TRUE
Motor On
TStaticField
0 {reference}
296 11 299 25
nil

TRUE
,
,
TStringField
0 {reference}
306 11 378 25
nil
String
TRUE
Motor Off
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

1
TControlStatic
208 {reference}
Text19
295 155
385 178
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
464 110 1993170 240 37
2
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TNumericField
0 {reference}
44 7 228 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
508 117 13921354 184 23
3
T1AxisListField
0 {reference}
16 4 67 18
nil

TRUE
Y_Motor
Y_Motor
0
FALSE
TLocalListField
0 {reference}
74 4 163 18
nil

TRUE
Actual Position
.ActualPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
166 4 172 18
nil

TRUE
  

Number
Number
FALSE
 0.00000000000000E+0000
TRUE
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlStatic
209 {reference}
Text23
295 180
385 203
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
464 110 1993170 233 37
2
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TNumericField
0 {reference}
44 7 221 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
508 117 13921354 177 23
3
T1AxisListField
0 {reference}
16 4 67 18
nil

TRUE
Y_Motor
Y_Motor
0
FALSE
TLocalListField
0 {reference}
74 4 156 18
nil

TRUE
Error Position
.ErrorPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
159 4 165 18
nil

TRUE
  

Number
Number
FALSE
 0.00000000000000E+0000
TRUE
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlStatic
210 {reference}
Text24
295 205
385 228
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
464 110 1993170 187 37
2
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TNumericField
0 {reference}
44 7 175 30
TNumericExpression
0 {reference}
122 {ReferenceLink}
508 117 8388736 131 23
5
TPathNameField
0 {reference}
12 11 12 11
nil

TRUE

Main.Torque
Main.
Torque
FALSE
TRUE
TRUE
TStaticField
0 {reference}
15 11 15 11
nil

TRUE

(
T1AxisListField
0 {reference}
22 4 73 18
nil

TRUE
Y_Motor
Y_Motor
0
TRUE
TPathNameField
0 {reference}
76 4 116 18
nil

TRUE
Torque

Main.
Torque
TRUE
FALSE
FALSE
TStaticField
0 {reference}
119 11 119 11
nil

TRUE

)
Number
Number
FALSE
 0.00000000000000E+0000
TRUE
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlButton
0 {reference}
PresetButton2
295 380
385 410
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
513 68 1993170 60 29
1
TStaticField
0 {reference}
9 7 37 21
nil

TRUE
Click
Click
FALSE
TRUE
FALSE
TBlock
0 {reference}
196 {ReferenceLink}
513 97 8388736 206 29
5
TPathNameField
0 {reference}
9 7 82 21
nil

TRUE
BiSS_Posital
Main.BiSS_Posital.Preset
Main.BiSS_Posital.
Preset
FALSE
TRUE
TRUE
TStaticField
0 {reference}
85 14 85 14
nil

TRUE

(
T1AxisListField
0 {reference}
92 7 143 21
nil

TRUE
Y_Motor
Y_Motor
0
TRUE
TPathNameField
0 {reference}
146 7 184 21
nil

TRUE
Preset

Main.BiSS_Posital.
Preset
TRUE
FALSE
FALSE
TStaticField
0 {reference}
187 14 187 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Preset
FALSE
TControlButton
0 {reference}
Jog__Button4
295 345
385 375
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
465 77 1993170 89 29
1
TStaticField
0 {reference}
9 7 82 21
nil

TRUE
Mouse Down
MouseDown
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
465 106 13921354 147 29
4
T1AxisListField
0 {reference}
13 7 64 21
nil

TRUE
Y_Motor
Y_Motor
0
FALSE
TStaticField
0 {reference}
67 7 88 21
nil

TRUE
Jog
.Jog(
TNumericField
0 {reference}
95 7 132 21
nil
Number
TRUE
-1.00000000000000E+0001
TRUE
TStaticField
0 {reference}
135 7 141 21
nil

TRUE
  
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
TBlock_H
0 {reference}
0 {ReferenceLink}
467 260 1993170 72 29
1
TStaticField
0 {reference}
9 7 65 21
nil

TRUE
Mouse Up
MouseUp
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
467 289 13921354 149 29
3
TNAxisListField
0 {reference}
13 7 64 21
nil

TRUE
Y_Motor
Y_Motor
0
TLocalListField
0 {reference}
71 7 136 21
nil

TRUE
Begin Stop
.BeginStop;
2
Stop
.Stop;
Begin Stop
.BeginStop;
TStaticField
0 {reference}
139 7 148 21
nil

TRUE
   

TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Jog <
FALSE
TControlEditor
211 {reference}
YSpeedEditor
295 415
385 438
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 85 13921354 299 37
5
TNAxisListField
0 {reference}
13 11 64 25
nil

TRUE
Y_Motor
Y_Motor
0
TStaticField
0 {reference}
67 11 86 25
nil

TRUE
Set

TLocalListField
0 {reference}
93 11 133 25
nil

TRUE
Speed
.SetSpeed(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
136 7 282 30
TNumericExpression
0 {reference}
211 {ReferenceLink}
624 92 14053594 146 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 99 18
nil

TRUE
YSpeedEditor
Main.YSpeedEditor
Main.
YSpeedEditor
TRUE
TRUE
TRUE
TStaticField
0 {reference}
102 4 134 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
285 11 288 25
nil

TRUE
 
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
-13 0  diagnostic marker
20
0
TControlEditor
212 {reference}
YMoveToEditor
295 465
385 488
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 85 13921354 289 37
4
TNAxisListField
0 {reference}
13 11 64 25
nil

TRUE
Y_Motor
Y_Motor
0
TLocalListField
0 {reference}
71 11 122 25
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
125 7 271 30
TNumericExpression
0 {reference}
212 {ReferenceLink}
613 92 14053594 146 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 99 18
nil

TRUE
YMoveToEditor
Main.YMoveToEditor
Main.
YMoveToEditor
TRUE
TRUE
TRUE
TStaticField
0 {reference}
102 4 134 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
274 11 283 25
nil

TRUE
   
);
TRUE
TRUE
TRUE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
0
0
TControlStatic
0 {reference}
Text25
390 40
480 63
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Z
1
TControlButton
0 {reference}
Jog__Button5
390 310
480 340
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
465 77 1993170 89 29
1
TStaticField
0 {reference}
9 7 82 21
nil

TRUE
Mouse Down
MouseDown
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
465 106 13921354 134 29
4
T1AxisListField
0 {reference}
13 7 62 21
nil

TRUE
Stepper
Stepper
0
FALSE
TStaticField
0 {reference}
65 7 86 21
nil

TRUE
Jog
.Jog(
TNumericField
0 {reference}
93 7 119 21
nil
Number
TRUE
 2.00000000000000E+0000
TRUE
TStaticField
0 {reference}
122 7 128 21
nil

TRUE
  
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
TBlock_H
0 {reference}
0 {ReferenceLink}
467 260 1993170 72 29
1
TStaticField
0 {reference}
9 7 65 21
nil

TRUE
Mouse Up
MouseUp
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
467 289 13921354 147 29
3
TNAxisListField
0 {reference}
13 7 62 21
nil

TRUE
Stepper
Stepper
0
TLocalListField
0 {reference}
69 7 134 21
nil

TRUE
Begin Stop
.BeginStop;
2
Stop
.Stop;
Begin Stop
.BeginStop;
TStaticField
0 {reference}
137 7 146 21
nil

TRUE
   

TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Jog >
FALSE
TControlButton
0 {reference}
Enable_OnButton3
390 70
480 100
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
426 61 1993170 60 29
1
TStaticField
0 {reference}
9 7 37 21
nil

TRUE
Click
Click
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
426 90 13921354 171 29
4
TNAxisListField
0 {reference}
13 7 62 21
nil

TRUE
Stepper
Stepper
0
TStaticField
0 {reference}
65 7 120 21
nil

TRUE
Set Motor
.SetMotor(
TBooleanField
0 {reference}
127 7 162 21
nil
Boolean
TRUE
TRUE
On
Off
TStaticField
0 {reference}
165 14 165 14
nil

TRUE

);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
426 119 13921354 454 37
6
TNAxisListField
0 {reference}
13 11 62 25
nil

TRUE
Stepper
Stepper
0
TStaticField
0 {reference}
65 11 84 25
nil

TRUE
Set

TLocalListField
0 {reference}
91 11 183 25
nil

TRUE
Actual Position 
.SetActualPosition(
2
Actual Position 
.SetActualPosition(
Commanded Position 
.SetCommandedPosition(
TStaticField
0 {reference}
186 11 200 25
nil

TRUE
To

TNumericField
0 {reference}
203 7 432 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
629 126 13921354 229 23
3
T1AxisListField
0 {reference}
16 4 112 18
nil

TRUE
StepperEncoder
StepperEncoder
0
FALSE
TLocalListField
0 {reference}
119 4 208 18
nil

TRUE
Actual Position
.ActualPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
211 4 217 18
nil

TRUE
  

Number
Number
TRUE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
435 11 438 25
nil

TRUE
 
);
TRUE
TRUE
TRUE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Motor On
FALSE
TControlStatic
216 {reference}
Text26
390 130
480 153
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
464 110 1993170 274 37
2
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TNumericField
0 {reference}
44 7 262 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
508 117 13921354 218 23
3
T1AxisListField
0 {reference}
16 4 65 18
nil

TRUE
Stepper
Stepper
0
FALSE
TLocalListField
0 {reference}
72 4 197 18
nil

TRUE
Commanded Position
.CommandedPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
200 4 206 18
nil

TRUE
  

Number
Number
FALSE
 0.00000000000000E+0000
TRUE
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlStatic
217 {reference}
Text27
390 105
480 128
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
473 127 1993170 392 37
6
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TBooleanField
0 {reference}
44 7 196 30
TBooleanExpression
0 {reference}
0 {ReferenceLink}
517 134 13921354 152 23
2
TNAxisListField
0 {reference}
19 4 68 18
nil

TRUE
Stepper
Stepper
0
TStaticField
0 {reference}
71 4 136 18
nil

TRUE
Motor Is On
.MotorIsOn
Boolean
Boolean
FALSE
TRUE
True
False
TStaticField
0 {reference}
199 11 213 25
nil

TRUE
as
as
TStringField
0 {reference}
220 11 291 25
nil
String
TRUE
Motor On
TStaticField
0 {reference}
294 11 297 25
nil

TRUE
,
,
TStringField
0 {reference}
304 11 376 25
nil
String
TRUE
Motor Off
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

1
TControlStatic
218 {reference}
Text28
390 155
480 178
-16777211
Tahoma
1
-16777208
12
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
464 110 1993170 285 37
2
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TNumericField
0 {reference}
44 7 273 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
508 117 13921354 229 23
3
T1AxisListField
0 {reference}
16 4 112 18
nil

TRUE
StepperEncoder
StepperEncoder
0
FALSE
TLocalListField
0 {reference}
119 4 208 18
nil

TRUE
Actual Position
.ActualPosition
5
Actual Position
.ActualPosition
Commanded Position
.CommandedPosition
Error Position
.ErrorPosition
Destination Position
.DestinationPosition
Capture Position
.CapturePosition
TStaticField
0 {reference}
211 4 217 18
nil

TRUE
  

Number
Number
FALSE
 0.00000000000000E+0000
TRUE
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlButton
0 {reference}
PresetButton3
390 380
480 410
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
513 68 1993170 60 29
1
TStaticField
0 {reference}
9 7 37 21
nil

TRUE
Click
Click
FALSE
TRUE
FALSE
TBlock
0 {reference}
196 {ReferenceLink}
513 97 8388736 251 29
5
TPathNameField
0 {reference}
9 7 82 21
nil

TRUE
BiSS_Posital
Main.BiSS_Posital.Preset
Main.BiSS_Posital.
Preset
FALSE
TRUE
TRUE
TStaticField
0 {reference}
85 14 85 14
nil

TRUE

(
T1AxisListField
0 {reference}
92 7 188 21
nil

TRUE
StepperEncoder
StepperEncoder
0
TRUE
TPathNameField
0 {reference}
191 7 229 21
nil

TRUE
Preset

Main.BiSS_Posital.
Preset
TRUE
FALSE
FALSE
TStaticField
0 {reference}
232 14 232 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Preset
FALSE
TControlButton
0 {reference}
Jog__Button6
390 345
480 375
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
465 77 1993170 89 29
1
TStaticField
0 {reference}
9 7 82 21
nil

TRUE
Mouse Down
MouseDown
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
465 106 13921354 138 29
4
T1AxisListField
0 {reference}
13 7 62 21
nil

TRUE
Stepper
Stepper
0
FALSE
TStaticField
0 {reference}
65 7 86 21
nil

TRUE
Jog
.Jog(
TNumericField
0 {reference}
93 7 123 21
nil
Number
TRUE
-2.00000000000000E+0000
TRUE
TStaticField
0 {reference}
126 7 132 21
nil

TRUE
  
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
TBlock_H
0 {reference}
0 {ReferenceLink}
467 260 1993170 72 29
1
TStaticField
0 {reference}
9 7 65 21
nil

TRUE
Mouse Up
MouseUp
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
467 289 13921354 147 29
3
TNAxisListField
0 {reference}
13 7 62 21
nil

TRUE
Stepper
Stepper
0
TLocalListField
0 {reference}
69 7 134 21
nil

TRUE
Begin Stop
.BeginStop;
2
Stop
.Stop;
Begin Stop
.BeginStop;
TStaticField
0 {reference}
137 7 146 21
nil

TRUE
   

TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Jog <
FALSE
TControlEditor
221 {reference}
ZSpeedEditor
390 415
480 438
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 85 13921354 289 37
5
TNAxisListField
0 {reference}
13 11 62 25
nil

TRUE
Stepper
Stepper
0
TStaticField
0 {reference}
65 11 84 25
nil

TRUE
Set

TLocalListField
0 {reference}
91 11 131 25
nil

TRUE
Speed
.SetSpeed(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
134 7 272 30
TNumericExpression
0 {reference}
221 {ReferenceLink}
622 92 14053594 138 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 91 18
nil

TRUE
ZSpeedEditor
Main.ZSpeedEditor
Main.
ZSpeedEditor
TRUE
TRUE
TRUE
TStaticField
0 {reference}
94 4 126 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
275 11 278 25
nil

TRUE
 
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
-13 0  diagnostic marker
20
0
TControlEditor
222 {reference}
ZMoveToEditor
390 465
480 488
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
250 {ReferenceLink}
488 85 36095 311 37
7
TStaticField
0 {reference}
9 11 37 25
nil

TRUE
Set   

TNumberVariableListField
0 {reference}
44 11 135 25
nil

TRUE
TimeReference
TimeReference
0
TConditionallyPresentIndexField
0 {reference}
138 11 138 25
nil
Number
TRUE
 1.00000000000000E+0000
FALSE
TConditionallyPresentAccessorField
0 {reference}
141 18 141 18
nil

TRUE
.SetValue(
:=
TStaticField
0 {reference}
144 11 161 25
nil

TRUE
 to 

TNumericField
0 {reference}
164 7 279 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
652 92 3937500 115 23
1
TStaticField
0 {reference}
12 4 103 18
nil

TRUE
Sample Counter
SampleCounter
Number
Number
TRUE
 0.00000000000000E+0000
TRUE
TConditionallyPresentAccessorField
0 {reference}
282 18 282 18
nil

TRUE
);
;
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 122 13921354 287 37
4
TNAxisListField
0 {reference}
13 11 62 25
nil

TRUE
Stepper
Stepper
0
TLocalListField
0 {reference}
69 11 120 25
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
123 7 269 30
TNumericExpression
0 {reference}
222 {ReferenceLink}
611 129 14053594 146 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 99 18
nil

TRUE
ZMoveToEditor
Main.ZMoveToEditor
Main.
ZMoveToEditor
TRUE
TRUE
TRUE
TStaticField
0 {reference}
102 4 134 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
272 11 281 25
nil

TRUE
   
);
TRUE
TRUE
TRUE
TBlock
0 {reference}
251 {ReferenceLink}
488 159 14053594 582 53
4
TPathNameField
0 {reference}
9 19 30 33
nil

TRUE
List
Main.List
Main.
List
TRUE
TRUE
TRUE
TStaticField
0 {reference}
33 19 74 33
nil

TRUE
Writeln
.writeln(
TNumericField
0 {reference}
77 7 557 46
TNumericExpression
0 {reference}
0 {ReferenceLink}
565 166 1226588 480 39
5
TStaticField
0 {reference}
12 19 12 19
nil

TRUE

(
TNumericField
0 {reference}
15 4 295 35
TNumericExpression
0 {reference}
0 {ReferenceLink}
580 170 1226588 280 31
5
TStaticField
0 {reference}
12 15 12 15
nil

TRUE

(
TNumericField
0 {reference}
15 4 130 27
TNumericExpression
0 {reference}
0 {ReferenceLink}
595 174 3937500 115 23
1
TStaticField
0 {reference}
12 4 103 18
nil

TRUE
Sample Counter
SampleCounter
Number
Number
TRUE
 5.00000000000000E+0000
TRUE
TLocalListField
0 {reference}
137 8 151 22
nil

TRUE
 - 
-
4
 + 
+
 - 
-
 x 
*
 / 
/
TNumericField
0 {reference}
154 4 265 27
TNumericExpression
0 {reference}
250 {ReferenceLink}
734 174 36095 111 23
1
TPathNameField
0 {reference}
12 4 99 18
nil

TRUE
TimeReference
Main.TimeReference
Main.
TimeReference
TRUE
TRUE
TRUE
Number
Number
TRUE
 2.00000000000000E+0000
TRUE
TStaticField
0 {reference}
268 15 268 15
nil

TRUE

)
Number
Number
TRUE
 5.00000000000000E+0000
TRUE
TLocalListField
0 {reference}
302 12 315 26
nil

TRUE
 / 
/
4
 + 
+
 - 
-
 x 
*
 / 
/
TNumericField
0 {reference}
318 8 465 31
TNumericExpression
0 {reference}
0 {ReferenceLink}
883 174 3937500 147 23
2
TControllerListField
0 {reference}
16 4 60 18
nil

TRUE
Master
Master.
0
TStaticField
0 {reference}
63 4 135 18
nil

TRUE
Sample Rate
SampleRate
Number
Number
TRUE
 2.00000000000000E+0000
TRUE
TStaticField
0 {reference}
468 19 468 19
nil

TRUE

)
Number
Number
TRUE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
560 26 560 26
nil

TRUE

);
TRUE
TRUE
FALSE
nil
TRUE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
0
0
TControlButton
0 {reference}
LoopOnButton
30 325
100 355
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
367 67 1993170 60 29
1
TStaticField
0 {reference}
9 7 37 21
nil

TRUE
Click
Click
FALSE
TRUE
FALSE
TBlock
0 {reference}
190 {ReferenceLink}
367 96 8388736 282 29
7
TPathNameField
0 {reference}
9 14 9 14
nil

TRUE

Main.SetLoopInversion
Main.
SetLoopInversion
FALSE
TRUE
TRUE
TStaticField
0 {reference}
12 14 12 14
nil

TRUE

(
T1AxisListField
0 {reference}
19 7 71 21
nil

TRUE
X_Motor
X_Motor
0
TRUE
TPathNameField
0 {reference}
74 7 173 21
nil

TRUE
SetLoopInversion

Main.
SetLoopInversion
TRUE
FALSE
FALSE
TStaticField
0 {reference}
176 7 206 21
nil

TRUE
State
,
TBooleanField
0 {reference}
213 7 258 21
nil
Boolean
TRUE
TRUE
True
False
TStaticField
0 {reference}
261 14 261 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
LoopOn
FALSE
TControlButton
0 {reference}
LoopOnButton2
30 360
100 390
536870911
Tahoma
1
-16777208
12
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
367 67 1993170 60 29
1
TStaticField
0 {reference}
9 7 37 21
nil

TRUE
Click
Click
FALSE
TRUE
FALSE
TBlock
0 {reference}
190 {ReferenceLink}
367 96 8388736 286 29
7
TPathNameField
0 {reference}
9 14 9 14
nil

TRUE

Main.SetLoopInversion
Main.
SetLoopInversion
FALSE
TRUE
TRUE
TStaticField
0 {reference}
12 14 12 14
nil

TRUE

(
T1AxisListField
0 {reference}
19 7 71 21
nil

TRUE
X_Motor
X_Motor
0
TRUE
TPathNameField
0 {reference}
74 7 173 21
nil

TRUE
SetLoopInversion

Main.
SetLoopInversion
TRUE
FALSE
FALSE
TStaticField
0 {reference}
176 7 206 21
nil

TRUE
State
,
TBooleanField
0 {reference}
213 7 262 21
nil
Boolean
TRUE
FALSE
True
False
TStaticField
0 {reference}
265 14 265 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
LoopOff
FALSE
TControlPlate
274 {reference}
Modbus_Communication
1295 115
1505 165
-16777211
Tahoma
1
-16777208
8
0
6
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDrag;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure DoubleClickLeft;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure Setup;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
function  CanClose:boolean;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
401 92 1993170 69 29
1
TStaticField
0 {reference}
9 7 62 21
nil

TRUE
Autostart
Autostart
FALSE
TRUE
FALSE
TBlock
0 {reference}
235 {ReferenceLink}
401 121 8388736 402 29
10
TPathNameField
0 {reference}
9 7 128 21
nil

TRUE
Initialize_IP_Address
Main.Modbus_Communication.Initialize_IP_Address
Main.Modbus_Communication.
Initialize_IP_Address
TRUE
TRUE
TRUE
TStaticField
0 {reference}
131 7 149 21
nil

TRUE
IP3
(
TNumericField
0 {reference}
156 7 196 21
nil
Number
TRUE
 1.92000000000000E+0002
FALSE
TStaticField
0 {reference}
199 7 217 21
nil

TRUE
IP2
,
TNumericField
0 {reference}
224 7 264 21
nil
Number
TRUE
 1.68000000000000E+0002
FALSE
TStaticField
0 {reference}
267 7 285 21
nil

TRUE
IP1
,
TNumericField
0 {reference}
292 7 318 21
nil
Number
TRUE
 1.00000000000000E+0000
FALSE
TStaticField
0 {reference}
321 7 339 21
nil

TRUE
IP0
,
TNumericField
0 {reference}
346 7 379 21
nil
Number
TRUE
 2.20000000000000E+0001
FALSE
TStaticField
0 {reference}
382 14 382 14
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
Modbus TCP/IP Communication
0
11
TUserProcedure
235 {reference}
TRUE
18
procedure Initialize_IP_Address(IP3:integer; IP2:integer; IP1:integer; IP0:integer);
{-----------------------------------------------------------------------------------}

  var scanner:longint;

  begin
  EthernetSetLongintIPAddress(
     IPAddressToLongint(IP3,IP2,IP1,IP0)
     IPAddressToLongint(255,255,255,0),
     IPAddressToLongint(IP3,IP2,IP1,250));

  ScheduleLastTask(TaskAddr(MaintainEthernetPolling),0);
  PortHandle:=NextPortHandle;
  if EthernetSocketInitialize(PortHandle,502) then
    Prompter.writeln('Problem binding socket 502');

  BeginTask(TaskAddr(Interpreter));
  end;
TRUE
TUserVariable
0 {reference}
FALSE
PortHandle
Longint
FALSE
10
1
0
TUserFunction
0 {reference}
FALSE
20
Function NextEthernetByte:longint;
{---------------------------------}

    var Value:longint;
    var TimeoutCounter:longint;

    begin
    TimeoutCounter:=0;
    repeat
      Value:=EthernetGetData(PortHandle);
      if Value=-1 then
        begin
        TimeoutCounter:=TimeoutCounter+1;
        yield;
        end;
    until (Value <> -1) or (TimeoutCounter > 100);
    if TimeoutCounter > 100 then
      Escape(ec_DataNotPresent);
    NextEthernetByte:=Value;
    end;
TRUE
TUserFunction
0 {reference}
FALSE
11
Function NextEthernetByteWithWriteback:longint;
{---------------------------------}

  var Value:longint;
  
  begin
  Value:=NextEthernetByte;
  StringAtPut(Modbus.ResponseString,Modbus.ResponseIndex,Value);
  Modbus.ResponseIndex:=Modbus.ResponseIndex+1;
  NextEthernetByteWithWriteback:=Value;
  end;
TRUE
TUserFunction
0 {reference}
FALSE
8
Function NextEthernetWordWithWriteback:longint;
{---------------------------------}

  begin
  NextEthernetWordWithWriteback:=NextEthernetByteWithWriteback*$100
    +NextEthernetByteWithWriteback;
  end;

TRUE
TUserFunction
0 {reference}
FALSE
5
Function NextEthernetWord:longint;
{---------------------------------}
  begin
  NextEthernetWord:=NextEthernetByte*$100 + NextEthernetByte;
  end;
TRUE
TUserFunction
0 {reference}
FALSE
11
Function NextEthernetLong:longint;
{---------------------------------}

  var LongToWord:TLongintToWordBigEndian;

  begin
  LongToWord.HighWord:=NextEthernetWord;
  LongToWord.LowWord:=NextEthernetWord;
  NextEthernetLong:=longint(LongToWord);
  end;

TRUE
TUserFunction
0 {reference}
FALSE
31
Procedure mc_3;
{------------------------------------------}
{ Query Multiple Registers                 }
{__________________________________________}

  var DataAddress:longint;
  var RegisterCount:longint;
  var scanner:integer;

  begin
  {$IFDEF DebugActive}
  Debuglist.writeln('mc_3');
  {$ENDIF}
  DataAddress:=NextEthernetWord;
  {$IFDEF DEBUGACTIVE}
  DebugList.writeln('DataAddress: ',DataAddress);
  {$ENDIF}
  RegisterCount:=NextEthernetWord;
  {$IFDEF DEBUGACTIVE}
  DebugList.writeln('RegisterCount: ',RegisterCount);
  {$ENDIF}

  Modbus.ResponseAppendByte(RegisterCount*2);

  for scanner:=DataAddress to DataAddress+RegisterCount-1 do
    Modbus.ResponseAppendWord(Modbus.Register[scanner+1]);

  Modbus.PatchMessageLength;
  EthernetWriteBuffer(Modbus.ResponseString,Modbus.ResponseIndex,PortHandle);
  end;

TRUE
TUserProcedure
0 {reference}
FALSE
19
Procedure mc_6;
{------------------------}
{ Write single register  }
{________________________}

  var DataAddress:integer;
  var Data:integer;
  var Message:string;

  begin
{$IFDEF DebugActive}
  Debuglist.writeln('mc_6');
{$ENDIF}
  DataAddress:=NextEthernetWordWithWriteback;
  Data:=NextEthernetWordWithWriteback;
  Modbus.Register[DataAddress+1]:=Data;
  Modbus.PatchMessageLength;
  EthernetWriteBuffer(Modbus.ResponseString,Modbus.ResponseIndex,PortHandle);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
37
Procedure mc_16;
{---------------------------}
{ Write Multiple registers  }
{___________________________}

  var DataAddress:longint;
  var NumberOfRegisters:longint;
  var scanner:longint;
  var NumberOfBytes:longint;

  begin
{$IFDEF DebugActive}
  Debuglist.writeln('mc_16 enter');
{$ENDIF}
  DataAddress:=NextEthernetWordWithWriteback;
{$IFDEF DebugActive}
  Debuglist.writeln('DataAddress: ',DataAddress);
{$ENDIF}
  NumberOfRegisters:=NextEthernetWordWithWriteback;
{$IFDEF DebugActive}
  Debuglist.writeln('NumberOfRegisters: ',NumberOfRegisters);
{$ENDIF}

  NumberOfBytes:=NextEthernetByteWithWriteback;
{$IFDEF DebugActive}
  Debuglist.writeln('NumberOfBytes: ',NumberOfBytes);
{$ENDIF}

  for scanner:=DataAddress to DataAddress+NumberOfRegisters-1 do
    Modbus.Register[scanner+1]:=NextEthernetWord;

  Modbus.PatchMessageLength;
  EthernetWriteBuffer(Modbus.ResponseString,Modbus.ResponseIndex,PortHandle);
{$IFDEF DebugActive}
  Debuglist.writeln('mc_16 exit');
{$ENDIF}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
60
Procedure Interpreter;
{---------------------------------}

  var TransactionIdentifier:longint;
  var ProtocolIdentifier:longint;
  var MessageLength:longint;
  var UnitIdentifier:longint;

  begin
  Modbus.CommandCounter:=0;
  Modbus.FaultCounter:=0;
  while true do
    begin
    try
      begin
      while not EthernetDataPresent(PortHandle) do
        yield;

      Modbus.ResponseIndex:=0;
      TransactionIdentifier:=NextEthernetWordWithWriteback;
      {$IFDEF DEBUGACTIVE}
      DebugList.writeln('TransactionIdentifier: ',TransactionIdentifier);
      {$ENDIF}
      ProtocolIdentifier:=NextEthernetWordWithWriteback;
      {$IFDEF DEBUGACTIVE}
      DebugList.writeln('ProtocolIdentifier: ',ProtocolIdentifier);
      {$ENDIF}
      MessageLength:=NextEthernetWordWithWriteback;
      {$IFDEF DEBUGACTIVE}
      DebugList.writeln('MessageLength: ',MessageLength);
      {$ENDIF}
      UnitIdentifier:=NextEthernetByteWithWriteback;
      {$IFDEF DEBUGACTIVE}
      DebugList.writeln('UnitIdentifier: ',UnitIdentifier);
      {$ENDIF}
      Modbus.FunctionCode:=NextEthernetByteWithWriteback;
      {$IFDEF DEBUGACTIVE}
      DebugList.writeln('FunctionCode: ',Modbus.FunctionCode);
      {$ENDIF}
      
      if Modbus.FunctionCode=3 then
        mc_3
      else if Modbus.FunctionCode=6 then
        mc_6
      else if Modbus.FunctionCode=16 then
        mc_16
      else
        Prompter.writeln('Unknown function: ',Modbus.FunctionCode);
      Modbus.CommandCounter:=Modbus.CommandCounter+1;
      end

    recover
      begin
      Delay(10);
      Modbus.FaultCounter:=Modbus.FaultCounter+1;
      end;
    end;
  yield;
  end;

TRUE
-2134376448
TRUE
FALSE
1
TControlStatic
0 {reference}
SetUserUnits
110 490
190 513
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
SetUnits
2
TControlEditor
242 {reference}
XMoveToEditor2
200 490
290 513
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 85 13921354 326 37
4
T1AxisListField
0 {reference}
13 11 65 25
nil

TRUE
X_Motor
X_Motor
0
FALSE
TStaticField
0 {reference}
68 11 152 25
nil

TRUE
Set Step Width
.SetStepWidth(
TNumericField
0 {reference}
155 7 309 30
TNumericExpression
0 {reference}
242 {ReferenceLink}
643 92 14053594 154 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 107 18
nil

TRUE
XMoveToEditor2
Main.XMoveToEditor2
Main.
XMoveToEditor2
TRUE
TRUE
TRUE
TStaticField
0 {reference}
110 4 142 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
312 18 312 18
nil

TRUE

);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
0
0
TControlEditor
243 {reference}
YMoveToEditor2
295 490
385 513
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 85 13921354 289 37
4
TNAxisListField
0 {reference}
13 11 64 25
nil

TRUE
Y_Motor
Y_Motor
0
TLocalListField
0 {reference}
71 11 122 25
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
125 7 271 30
TNumericExpression
0 {reference}
243 {ReferenceLink}
613 92 14053594 146 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 99 18
nil

TRUE
YMoveToEditor2
Main.YMoveToEditor2
Main.
YMoveToEditor2
TRUE
TRUE
TRUE
TStaticField
0 {reference}
102 4 134 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
274 11 283 25
nil

TRUE
   
);
TRUE
TRUE
TRUE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
0
0
TControlStatic
0 {reference}
Text38
110 440
190 463
-16777211
Tahoma
1
-16777208
12
0
0
nil
0 0  diagnostic marker
Set Accel
2
TControlEditor
246 {reference}
XSpeedEditor2
200 440
290 463
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 85 13921354 296 37
5
TNAxisListField
0 {reference}
13 11 65 25
nil

TRUE
X_Motor
X_Motor
0
TStaticField
0 {reference}
68 11 87 25
nil

TRUE
Set

TLocalListField
0 {reference}
94 11 130 25
nil

TRUE
Accel
.SetAccel(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
133 7 279 30
TNumericExpression
0 {reference}
246 {ReferenceLink}
621 92 14053594 146 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 99 18
nil

TRUE
XSpeedEditor2
Main.XSpeedEditor2
Main.
XSpeedEditor2
TRUE
TRUE
TRUE
TStaticField
0 {reference}
102 4 134 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
282 11 285 25
nil

TRUE
 
);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 122 13921354 296 37
5
TNAxisListField
0 {reference}
13 11 65 25
nil

TRUE
X_Motor
X_Motor
0
TStaticField
0 {reference}
68 11 87 25
nil

TRUE
Set

TLocalListField
0 {reference}
94 11 130 25
nil

TRUE
Decel
.SetDecel(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
133 7 279 30
TNumericExpression
0 {reference}
246 {ReferenceLink}
621 129 14053594 146 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 99 18
nil

TRUE
XSpeedEditor2
Main.XSpeedEditor2
Main.
XSpeedEditor2
TRUE
TRUE
TRUE
TStaticField
0 {reference}
102 4 134 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
282 11 285 25
nil

TRUE
 
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
nil
-13 0  diagnostic marker
20
0
TControlEditor
247 {reference}
YSpeedEditor2
295 440
385 463
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 85 13921354 294 37
5
TNAxisListField
0 {reference}
13 11 64 25
nil

TRUE
Y_Motor
Y_Motor
0
TStaticField
0 {reference}
67 11 86 25
nil

TRUE
Set

TLocalListField
0 {reference}
93 11 129 25
nil

TRUE
Accel
.SetAccel(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
132 7 277 30
TNumericExpression
0 {reference}
247 {ReferenceLink}
620 92 14053594 145 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 98 18
nil

TRUE
YSpeedEditor2
Main.YSpeedEditor2
Main.
YSpeedEditor2
TRUE
TRUE
TRUE
TStaticField
0 {reference}
101 4 133 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
280 11 283 25
nil

TRUE
 
);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 122 13921354 294 37
5
TNAxisListField
0 {reference}
13 11 64 25
nil

TRUE
Y_Motor
Y_Motor
0
TStaticField
0 {reference}
67 11 86 25
nil

TRUE
Set

TLocalListField
0 {reference}
93 11 129 25
nil

TRUE
Decel
.SetDecel(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
132 7 277 30
TNumericExpression
0 {reference}
247 {ReferenceLink}
620 129 14053594 145 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 98 18
nil

TRUE
YSpeedEditor2
Main.YSpeedEditor2
Main.
YSpeedEditor2
TRUE
TRUE
TRUE
TStaticField
0 {reference}
101 4 133 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
280 11 283 25
nil

TRUE
 
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
nil
-13 0  diagnostic marker
20
0
TControlEditor
248 {reference}
ZSpeedEditor2
390 440
480 463
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 85 13921354 292 37
5
TNAxisListField
0 {reference}
13 11 62 25
nil

TRUE
Stepper
Stepper
0
TStaticField
0 {reference}
65 11 84 25
nil

TRUE
Set

TLocalListField
0 {reference}
91 11 127 25
nil

TRUE
Accel
.SetAccel(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
130 7 275 30
TNumericExpression
0 {reference}
248 {ReferenceLink}
618 92 14053594 145 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 98 18
nil

TRUE
ZSpeedEditor2
Main.ZSpeedEditor2
Main.
ZSpeedEditor2
TRUE
TRUE
TRUE
TStaticField
0 {reference}
101 4 133 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
278 11 281 25
nil

TRUE
 
);
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 122 13921354 292 37
5
TNAxisListField
0 {reference}
13 11 62 25
nil

TRUE
Stepper
Stepper
0
TStaticField
0 {reference}
65 11 84 25
nil

TRUE
Set

TLocalListField
0 {reference}
91 11 127 25
nil

TRUE
Decel
.SetDecel(
3
Speed
.SetSpeed(
Accel
.SetAccel(
Decel
.SetDecel(
TNumericField
0 {reference}
130 7 275 30
TNumericExpression
0 {reference}
248 {ReferenceLink}
618 129 14053594 145 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 98 18
nil

TRUE
ZSpeedEditor2
Main.ZSpeedEditor2
Main.
ZSpeedEditor2
TRUE
TRUE
TRUE
TStaticField
0 {reference}
101 4 133 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
278 11 281 25
nil

TRUE
 
);
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
nil
-13 0  diagnostic marker
20
0
TControlEditor
252 {reference}
ZMoveToEditor2
390 490
480 513
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
250 {ReferenceLink}
488 85 36095 311 37
7
TStaticField
0 {reference}
9 11 37 25
nil

TRUE
Set   

TNumberVariableListField
0 {reference}
44 11 135 25
nil

TRUE
TimeReference
TimeReference
0
TConditionallyPresentIndexField
0 {reference}
138 11 138 25
nil
Number
TRUE
 1.00000000000000E+0000
FALSE
TConditionallyPresentAccessorField
0 {reference}
141 18 141 18
nil

TRUE
.SetValue(
:=
TStaticField
0 {reference}
144 11 161 25
nil

TRUE
 to 

TNumericField
0 {reference}
164 7 279 30
TNumericExpression
0 {reference}
0 {ReferenceLink}
652 92 3937500 115 23
1
TStaticField
0 {reference}
12 4 103 18
nil

TRUE
Sample Counter
SampleCounter
Number
Number
TRUE
 0.00000000000000E+0000
TRUE
TConditionallyPresentAccessorField
0 {reference}
282 18 282 18
nil

TRUE
);
;
TRUE
TRUE
FALSE
TBlock
0 {reference}
0 {ReferenceLink}
488 122 13921354 294 37
4
TNAxisListField
0 {reference}
13 11 62 25
nil

TRUE
Stepper
Stepper
0
TLocalListField
0 {reference}
69 11 120 25
nil

TRUE
Move To
.MoveTo(
4
Move By
.MoveBy(
Move To
.MoveTo(
Begin Move By
.BeginMoveBy(
Begin Move To
.BeginMoveTo(
TNumericField
0 {reference}
123 7 276 30
TNumericExpression
0 {reference}
252 {ReferenceLink}
611 129 14053594 153 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 106 18
nil

TRUE
ZMoveToEditor2
Main.ZMoveToEditor2
Main.
ZMoveToEditor2
TRUE
TRUE
TRUE
TStaticField
0 {reference}
109 4 141 18
nil

TRUE
Value
)
Number
Number
TRUE
 1.00000000000000E+0000
TRUE
TStaticField
0 {reference}
279 11 288 25
nil

TRUE
   
);
TRUE
TRUE
TRUE
TBlock
0 {reference}
251 {ReferenceLink}
488 159 14053594 534 53
4
TPathNameField
0 {reference}
9 19 30 33
nil

TRUE
List
Main.List
Main.
List
TRUE
TRUE
TRUE
TStaticField
0 {reference}
33 19 74 33
nil

TRUE
Writeln
.writeln(
TNumericField
0 {reference}
77 7 509 46
TNumericExpression
0 {reference}
0 {ReferenceLink}
565 166 1226588 432 39
5
TStaticField
0 {reference}
12 19 12 19
nil

TRUE

(
TNumericField
0 {reference}
15 4 295 35
TNumericExpression
0 {reference}
0 {ReferenceLink}
580 170 1226588 280 31
5
TStaticField
0 {reference}
12 15 12 15
nil

TRUE

(
TNumericField
0 {reference}
15 4 130 27
TNumericExpression
0 {reference}
0 {ReferenceLink}
595 174 3937500 115 23
1
TStaticField
0 {reference}
12 4 103 18
nil

TRUE
Sample Counter
SampleCounter
Number
Number
TRUE
 5.00000000000000E+0000
TRUE
TLocalListField
0 {reference}
137 8 151 22
nil

TRUE
 - 
-
4
 + 
+
 - 
-
 x 
*
 / 
/
TNumericField
0 {reference}
154 4 265 27
TNumericExpression
0 {reference}
250 {ReferenceLink}
734 174 36095 111 23
1
TPathNameField
0 {reference}
12 4 99 18
nil

TRUE
TimeReference
Main.TimeReference
Main.
TimeReference
TRUE
TRUE
TRUE
Number
Number
TRUE
 2.00000000000000E+0000
TRUE
TStaticField
0 {reference}
268 15 268 15
nil

TRUE

)
Number
Number
TRUE
 5.00000000000000E+0000
TRUE
TLocalListField
0 {reference}
302 12 315 26
nil

TRUE
 / 
/
4
 + 
+
 - 
-
 x 
*
 / 
/
TNumericField
0 {reference}
318 8 417 31
TNumericExpression
0 {reference}
0 {ReferenceLink}
883 174 3937500 99 23
2
TControllerListField
0 {reference}
12 4 12 18
nil

TRUE
Master
Master.
0
TStaticField
0 {reference}
15 4 87 18
nil

TRUE
Sample Rate
SampleRate
Number
Number
TRUE
 2.00000000000000E+0000
TRUE
TStaticField
0 {reference}
420 19 420 19
nil

TRUE

)
Number
Number
TRUE
 0.00000000000000E+0000
TRUE
TStaticField
0 {reference}
512 26 512 26
nil

TRUE

);
TRUE
TRUE
FALSE
nil
TRUE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
0
0
TControlButton
0 {reference}
A_1Button
750 70
810 100
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 1;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
1
FALSE
TControlButton
0 {reference}
DefaultButton2
750 150
810 180
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 6;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
6
FALSE
TControlButton
0 {reference}
DefaultButton3
750 230
810 260
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 11;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
11
FALSE
TControlButton
0 {reference}
DefaultButton4
750 310
810 340
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
6
procedure Click;
  const AugerNo = 16;
  begin
  {AutoMode.ButtonHandler(AugerNo);}
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
16
FALSE
TControlButton
0 {reference}
DefaultButton5
850 70
910 100
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 2;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
2
FALSE
TControlButton
0 {reference}
DefaultButton6
950 70
1010 100
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 3;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
3
FALSE
TControlButton
0 {reference}
DefaultButton7
1050 70
1110 100
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 4;
  begin
   AutoMode.ButtonHandler(AugerNo);  
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
4
FALSE
TControlButton
0 {reference}
DefaultButton8
1150 70
1210 100
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 5;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
5
FALSE
TControlButton
0 {reference}
DefaultButton9
850 150
910 180
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 7;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
7
FALSE
TControlButton
0 {reference}
DefaultButton10
850 230
910 260
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
 const AugerNo = 12;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
12
FALSE
TControlButton
0 {reference}
DefaultButton11
850 315
910 340
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 17;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
17
FALSE
TControlButton
0 {reference}
DefaultButton12
950 150
1010 180
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 8;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
8
FALSE
TControlButton
0 {reference}
DefaultButton13
950 230
1010 260
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 14;
  begin
 AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
13
FALSE
TControlButton
0 {reference}
DefaultButton14
950 310
1010 340
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 18;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
18
FALSE
TControlButton
0 {reference}
DefaultButton15
1050 150
1110 180
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 9;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
9
FALSE
TControlButton
0 {reference}
DefaultButton16
1050 230
1110 260
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 14;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
14
FALSE
TControlButton
0 {reference}
DefaultButton17
1150 150
1210 180
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 10;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
10
FALSE
TControlButton
0 {reference}
DefaultButton18
1050 310
1110 340
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 19;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
19
FALSE
TControlButton
0 {reference}
DefaultButton19
1150 230
1210 260
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 15;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
15
FALSE
TControlButton
0 {reference}
DefaultButton20
1155 310
1215 340
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const AugerNo = 20;
  begin
  AutoMode.ButtonHandler(AugerNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
20
FALSE
TControlPlate
259 {reference}
PowerMonitor
1295 175
1445 220
-16777211
Tahoma
1
-16777208
8
0
6
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDrag;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure DoubleClickLeft;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure Setup;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
function  CanClose:boolean;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
Power Monitor
0
6
TUserProcedure
260 {reference}
TRUE
7
procedure Initialize(Motor:T1Axis);
  begin
  TorqueSimulator:=0;
  Level:=0;
  PowerMotor.Init(Motor);
  BeginTask(TaskAddr(MonitorPower));
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
21
procedure MonitorPower;

  var i:single;
  const K_heating=0.00025;
  const K_decay=0.99990;

  begin
  Level:=0;
  while true do
    begin
    yield;
    {if not PowerMotor.MotorIsOn then
      level:=0
    else}
      begin
      i:=PowerMotor.CommandedTorque*(10/$7FFF);
      Level:=Level+K_heating*i*i;
      Level:=Level*K_decay;
      end;
    end;
  end;
TRUE
TUserVariable
261 {reference}
TRUE
TorqueSimulator
single
FALSE
10
1
0
TUserVariable
262 {reference}
TRUE
Level
single
FALSE
10
1
0
TUserVariable
0 {reference}
FALSE
PowerMotor
T1Axis
FALSE
10
1
0
TUserFunction
263 {reference}
TRUE
4
function Ok:boolean;
  begin
  Ok:=Level < 100;
  end;
TRUE
-2134376448
TRUE
FALSE
1
TControlButton
0 {reference}
P1Button
570 70
615 100
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const PumpNo = 21;
  begin
  AutoMode.ButtonHandler(PumpNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
P1
FALSE
TControlButton
0 {reference}
P1Button2
665 70
705 100
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const PumpNo = 22;
  begin
  AutoMode.ButtonHandler(PumpNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
P2
FALSE
TControlButton
0 {reference}
P1Button3
570 150
615 180
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const PumpNo = 23;
  begin
  AutoMode.ButtonHandler(PumpNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
P3
FALSE
TControlButton
0 {reference}
P1Button4
660 150
705 180
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const PumpNo = 24;
  begin
  AutoMode.ButtonHandler(PumpNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
P4
FALSE
TControlButton
0 {reference}
P1Button5
570 230
615 260
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const PumpNo = 25;
  begin
  AutoMode.ButtonHandler(PumpNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
P5
FALSE
TControlButton
0 {reference}
P1Button6
660 230
705 260
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const PumpNo = 26;
  begin
  AutoMode.ButtonHandler(PumpNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
P6
FALSE
TControlButton
0 {reference}
P1Button7
570 310
615 340
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const PumpNo = 27;
  begin
  AutoMode.ButtonHandler(PumpNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
P7
FALSE
TControlButton
0 {reference}
P1Button8
660 310
705 340
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
5
procedure Click;
  const PumpNo = 8;
  begin
  AutoMode.ButtonHandler(PumpNo);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
P8
FALSE
TControlEditor
276 {reference}
PatternNumber
-200 600
-110 623
-16777211
Tahoma
1
-16777208
12
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TBlock_H
0 {reference}
0 {ReferenceLink}
488 56 1993170 121 29
1
TStaticField
0 {reference}
9 7 114 21
nil

TRUE
Enter Key Pressed
EnterKeyPressed
FALSE
TRUE
FALSE
TBlock
0 {reference}
279 {ReferenceLink}
488 85 36095 326 37
7
TStaticField
0 {reference}
9 11 37 25
nil

TRUE
Set   

TNumberVariableListField
0 {reference}
44 11 116 25
nil

TRUE
PatternNum
PatternNum
0
TConditionallyPresentIndexField
0 {reference}
119 11 119 25
nil
Number
TRUE
 1.00000000000000E+0000
FALSE
TConditionallyPresentAccessorField
0 {reference}
122 18 122 18
nil

TRUE
.SetValue(
:=
TStaticField
0 {reference}
125 11 142 25
nil

TRUE
 to 

TNumericField
0 {reference}
145 7 294 30
TNumericExpression
0 {reference}
276 {ReferenceLink}
633 92 14053594 149 23
3
TStaticField
0 {reference}
12 11 12 11
nil

TRUE

EditorReadlnDouble(
TPathNameField
0 {reference}
15 4 102 18
nil

TRUE
PatternNumber
Main.PatternNumber
Main.
PatternNumber
TRUE
TRUE
TRUE
TStaticField
0 {reference}
105 4 137 18
nil

TRUE
Value
)
Number
Number
TRUE
 0.00000000000000E+0000
TRUE
TConditionallyPresentAccessorField
0 {reference}
297 18 297 18
nil

TRUE
);
;
TRUE
TRUE
FALSE
nil
FALSE
FALSE
FALSE
FALSE
nil
0 0  diagnostic marker
0
0
TControlEditor
293 {reference}
Editor
-200 575
-105 598
-16777211
Tahoma
1
-16777208
0
0
1
TUserProcedure
0 {reference}
FALSE
4
procedure EnterKeyPressed;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
100.0
0
TControlButton
0 {reference}
Test_Bowl_SpinnerButton
0 690
100 720
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
7
procedure Click;
  begin
  if Spin.Value=0 then
    Spin.SetValue(255)
  else
    Spin.SetValue(0);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
Test Bowl Spinner
FALSE
TControlButton
0 {reference}
Stop_DispenseButton
895 405
1030 475
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
7
procedure Click;
  begin
  if AutoMode.ManualDispenseComplete then
    AutoMode.ManualDispenseComplete:=false
  else
    AutoMode.ManualDispenseComplete:=true;
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
Stop Dispense
FALSE
TControlPlate
298 {reference}
AutoMode
1310 385
1530 485
-16777211
Tahoma
1
-16777208
8
0
6
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDrag;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure DoubleClickLeft;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure Setup;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
function  CanClose:boolean;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
Auto Mode 
0
3
TUserIncludeFile
0 {reference}
FALSE
Containers.inc

Containers.inc
TUserIncludeFile
0 {reference}
FALSE
Gantry.inc

Gantry.inc
TUserIncludeFile
0 {reference}
FALSE
AutoMode.inc

AutoMode.inc
-2134376448
TRUE
FALSE
1
TControlListBox
0 {reference}
List
1120 430
1220 515
-16777211
Tahoma
1
-16777208
12
0
2
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure DoubleClick;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
1
FALSE
TRUE
TControlButton
0 {reference}
InitializeButton
570 405
675 465
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
4
procedure Click;
  begin
    AutoMode.InitializeActuators;
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
Initialize
FALSE
TControlButton
0 {reference}
GantryEnable
715 410
845 465
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
13
procedure Click;
  begin
   if AutoMode.GantryEnabled then
   begin
     AutoMode.GantryEnabled:=false;
     GantryEnabledIndicator:=false;
   end
   else
   begin
   AutoMode.GantryEnabled:=true
     GantryEnabledIndicator:=true;
   end;
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
Gantry En. Toggle
FALSE
TControlStatic
0 {reference}
Text9
715 485
795 502
-16777211
Tahoma
1
-16777208
8
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
455 147 1993170 331 37
6
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TBooleanField
0 {reference}
44 7 207 30
TBooleanExpression
0 {reference}
309 {ReferenceLink}
499 154 36095 163 23
1
TPathNameField
0 {reference}
15 4 147 18
nil

TRUE
GantryEnabledIndicator
Main.GantryEnabledIndicator
Main.
GantryEnabledIndicator
TRUE
TRUE
TRUE
Boolean
Boolean
FALSE
TRUE
True
False
TStaticField
0 {reference}
210 11 224 25
nil

TRUE
as
as
TStringField
0 {reference}
231 11 266 25
nil
String
TRUE
On
TStaticField
0 {reference}
269 11 272 25
nil

TRUE
,
,
TStringField
0 {reference}
279 11 315 25
nil
String
TRUE
Off
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlStatic
0 {reference}
Text14
910 485
995 502
-16777211
Tahoma
1
-16777208
8
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
680 260 1993170 407 37
6
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TBooleanField
0 {reference}
44 7 283 30
TBooleanExpression
0 {reference}
312 {ReferenceLink}
724 267 36095 239 23
1
TPathNameField
0 {reference}
15 4 223 18
nil

TRUE
AutoMode ManualDispenseComplete
Main.AutoMode.ManualDispenseComplete
Main.AutoMode.
ManualDispenseComplete
TRUE
TRUE
TRUE
Boolean
Boolean
FALSE
TRUE
True
False
TStaticField
0 {reference}
286 11 300 25
nil

TRUE
as
as
TStringField
0 {reference}
307 11 342 25
nil
String
TRUE
On
TStaticField
0 {reference}
345 11 348 25
nil

TRUE
,
,
TStringField
0 {reference}
355 11 391 25
nil
String
TRUE
Off
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
TControlButton
0 {reference}
Manual_ToggleButton
580 500
675 555
536870911
Tahoma
1
-16777208
8
0
3
TUserProcedure
0 {reference}
FALSE
13
procedure Click;
  begin
  if AutoMode.ManualMode then
    begin
    AutoMode.ManualMode:=false;
    ManualMode:=false;
    end
  else
    begin
    AutoMode.ManualMode:=true;
    ManualMode:=true;
    end;
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseDown;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MouseUp;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
nil
0 0  diagnostic marker
Manual Toggle
FALSE
TControlStatic
0 {reference}
Text20
610 565
675 582
-16777211
Tahoma
1
-16777208
8
0
0
TBlock_Show
0 {reference}
0 {ReferenceLink}
414 227 1993170 271 37
6
TStaticField
0 {reference}
9 11 41 25
nil

TRUE
Show
Show
TBooleanField
0 {reference}
44 7 147 30
TBooleanExpression
0 {reference}
314 {ReferenceLink}
458 234 36095 103 23
1
TPathNameField
0 {reference}
15 4 87 18
nil

TRUE
ManualMode
Main.ManualMode
Main.
ManualMode
TRUE
TRUE
TRUE
Boolean
Boolean
FALSE
TRUE
True
False
TStaticField
0 {reference}
150 11 164 25
nil

TRUE
as
as
TStringField
0 {reference}
171 11 206 25
nil
String
TRUE
On
TStaticField
0 {reference}
209 11 212 25
nil

TRUE
,
,
TStringField
0 {reference}
219 11 255 25
nil
String
TRUE
Off
FALSE
FALSE
FALSE
nil
FALSE
FALSE
nil
0 0  diagnostic marker

0
51
TUserVariable
19 {reference}
TRUE
Gain
single
FALSE
10
1
0
TUserVariable
20 {reference}
TRUE
Kz
Single
FALSE
10
1
0
TUserVariable
28 {reference}
TRUE
IntegrationAccumulator
single
FALSE
10
1
0
TUserVariable
26 {reference}
TRUE
Ki
Single
FALSE
10
1
0
TUserVariable
35 {reference}
TRUE
TorqueSetpoint
Single
FALSE
10
1
0
TUserVariable
0 {reference}
FALSE
File
TFile
FALSE
10
1
0
TUserVariable
49 {reference}
TRUE
TopPosition
Number
FALSE
10
1
0
TUserProcedure
53 {reference}
TRUE
4
procedure Set_Enable(State:boolean);
  begin
  Axis[1].SetEnable(State);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
13
procedure LongintToHexString(aNumber:longint);
{-----------------------------------------------------------------------------------------}

  var scanner:longint;

  begin
  for scanner:=7 downto 0 do
    begin
	StringAtPut(NumberString,scanner,HexToAscii(aNumber and $F));
	aNumber:=aNumber div $10;
	end;
  StringAtPut(NumberString,8,0);
  end;
TRUE
TUserVariable
0 {reference}
FALSE
NumberString
String
FALSE
10
1
0
TUserFunction
0 {reference}
FALSE
12
Function HexToAscii(C:integer):longint;
{------------------------------------------------------------------------------}

  begin
  if (C >= 0) and (C <= 9) then
    HexToAscii:=C+48
  else if (C >=10) and (C <= 15) then
    HexToAscii:=C+55
  else
    Escape(ParameterOutOfRangeEscapeCode);
  end;

TRUE
TUserVariable
0 {reference}
FALSE
CycleTorque
Number
FALSE
10
1
0
TUserProcedure
0 {reference}
FALSE
12
procedure PerformTorqueCycle;
  begin
  TorqueCycleEnabled:=true;
  while TorqueCycleEnabled do
    begin
    Axis[1].SetCommandedTorque(round(CycleTorque));
    delay(5);
    Axis[1].SetCommandedTorque(-round(CycleTorque));
    delay(5);
    end;
  Axis[1].SetCommandedTorque(0);
  end;
TRUE
TUserVariable
0 {reference}
FALSE
TorqueCycleEnabled
Boolean
FALSE
10
1
0
TUserFunction
92 {reference}
TRUE
4
function EnableOn:boolean;
  begin
  EnableOn:={Motor.EnableIsOn;}Server.MemReadWord($60000050) <> 0;
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
13
function SPIAt(Address:longint):longint;

  var SPIAddrStatus:integer; absolute $6000001A;
  var SPIData:longint; absolute $60000016;

  begin
  repeat
  until SPIAddrStatus=1;
  SPIAddrStatus:=Address;
  repeat
  until SPIAddrStatus=1;
  SPIAt:=SPIData;
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
26
procedure SPIAtPut(var anAxis:T1Axis; Address:longint; Value:longint);

  var SPIAddrStatus:integer; absolute $6000001A;
  var SPIData:longint; absolute $60000016;
  var IsPhysicalValue:longint;
  var Command:longint;

  begin
  IsPhysicalValue:=integer(anAxis.IsPhysical);
  if IsPhysicalValue=0 then
    begin
    end
  else if IsPhysicalValue=1 then
    begin
    repeat
    until SPIAddrStatus=1;
    SPIData:=Value;
    SPIAddrStatus:=$80 or Address;
    end
  else
    begin
    Command:=$2000 or IsPhysicalValue;
    NeighborCommunicationProcedureAxisIntegerLongintParam(Command,Address,Value);
    end;
  yield;
  end;
TRUE
TUserVariable
96 {reference}
TRUE
CommandValue
longint
FALSE
10
1
0
TUserProcedure
120 {reference}
TRUE
9
procedure SetCompensation(NoShowAxis:T1Axis);
  begin
  NoShowAxis.SetGain(50);
  NoShowAxis.SetZero(232);
  NoShowAxis.SetIntegrator(0);
  NoShowAxis.SetErrorLimit(20);
  NoShowAxis.SetTorqueLimit($7FFF);
  NoShowAxis.SetLoopInversion(off);
  end;
TRUE
TUserFunction
122 {reference}
TRUE
4
function Torque(NoShowAxis:T1Axis):longint;
  begin
  Torque:=NoShowAxis.CommandedTorque;
  end;
TRUE
TUserFunction
123 {reference}
TRUE
4
function db1:longint;
  begin
  db1:=DebugLongint1;
  end;
TRUE
TUserProcedure
137 {reference}
TRUE
4
procedure SetGain(NoShowAxis:T1Axis;Gain:longint);
  begin
  NoShowAxis.SetGain(Gain);
  end;
TRUE
TUserVariable
148 {reference}
TRUE
Value
Number
FALSE
10
1
0
TUserProcedure
0 {reference}
FALSE
38
procedure NeighborCommunicationProcedureAxisIntegerLongintParam(Command:longint;WordParam:integer; LongintParam:longint);
{---------------------------------------------------------------------------------}

  var scanner:longint;
  var Done:boolean;
  var LongToWord:TLongintToWord;

  begin
  Done:=false;
  LongToWord:=TLongintToWord(LongintParam);
  for scanner:=1 to 4 do
    begin
    try
      begin
      Server.MemWriteWord(NeighborCommunication.RightData,Command);
      Server.MemWriteWord(NeighborCommunication.RightData,WordParam);
      Server.MemWriteWord(NeighborCommunication.RightData,LongToWord.LowWord);
      Server.MemWriteWord(NeighborCommunication.RightData,LongToWord.HighWord);
      Server.MemWriteWord(NeighborCommunication.RightData,Command+WordParam+LongToWord.LowWord+LongToWord.HighWord);
      if NeighborCommunication.ReadWordFromRight=$55AA then
        Done:=true
      else
        yield;
      end
    recover
      begin
      yield;
      NeighborCommunication.RetryCounter:=NeighborCommunication.RetryCounter+1;
      end;

    if Done then
      exit;
    end;

  Escape(NeighborCommunicationEscapeCode);
  end;


TRUE
TUserFunction
167 {reference}
TRUE
4
function Inputs_Raw:longint;
  begin
  Inputs_Raw:=SPIAt($64);
  end;
TRUE
TUserVariable
173 {reference}
TRUE
Reference
Number
FALSE
10
1
0
TUserProcedure
190 {reference}
TRUE
4
procedure SetLoopInversion(NoShowAxis:T1Axis; State:boolean);
  begin
  NoShowAxis.SetLoopInversion(State);
  end;
TRUE
TUserFunction
233 {reference}
TRUE
4
function MT:longint;
  begin
  MT:=X_Motor.MotorType;
  end;
TRUE
TUserVariable
250 {reference}
TRUE
TimeReference
Number
FALSE
10
1
0
TUserFunction
0 {reference}
FALSE
9
function XPositionForColumn(ColumnNumber:longint):double;

  const Column1=8.85;
  const Column5=52.31;

  begin
  XPositionForColumn:=(LongintConfineBetween(ColumnNumber,1,5,ParameterOutOfRangeEscapeCode)-1)
    *(Column5-Column1)/4+Column1;
  end;
TRUE
TUserFunction
0 {reference}
FALSE
9
function YPositionForRow(RowNumber:longint):double;

  const Row1=2;
  const Row5=99;

  begin
  YPositionForRow:=(4-LongintConfineBetween(RowNumber,1,4,ParameterOutOfRangeEscapeCode))*
    (Row5-Row1)/3+Row1;
  end;
TRUE
TUserFunction
0 {reference}
FALSE
4
function StepperError:double;
  begin
  StepperError:=Stepper.CommandedPosition-StepperEncoder.ActualPosition;
  end;
TRUE
TUserProcedure
255 {reference}
TRUE
7
procedure SafeZMoveTo(Destination:double);
  begin
  Stepper.SetActualPosition(StepperEncoder.ActualPosition);
  Stepper.MoveTo(Destination);
  if abs(StepperError) > 0.1 then
    Escape(3000);
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MyProcedure;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MyProcedure;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MyProcedure;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserProcedure
0 {reference}
FALSE
4
procedure MyProcedure;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserVariable
273 {reference}
TRUE
pattern_index
Number
FALSE
10
1
0
TUserProcedure
0 {reference}
FALSE
4
procedure MyProcedure;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserVariable
278 {reference}
TRUE
Counter
Number
FALSE
10
1
0
TUserVariable
279 {reference}
TRUE
PatternNum
Number
FALSE
10
1
0
TUserProcedure
281 {reference}
TRUE
47
procedure Dispense(Motor:TDistributedT1Axis;Pattern:longint;Amt:longint);
  var Container_ptrn1 : Array[0..3] of double;
  var Container_ptrn2 : Array[0..3] of double;
  var i: integer;
  var PatternIndex: integer;
  var WeightCheck: boolean;

  begin

  
	Container_ptrn1[0]:= 2; {Positive is CCW, brings food foward!}
  Container_ptrn1[1] = 2;
  Container_ptrn1[2] = 2;
  Container_ptrn1[3] = -1;
  
  Container_ptrn2[0]:= 2;
  Container_ptrn2[1] = 2;
  Container_ptrn2[2] = 2;
  Container_ptrn2[3] = 2;

  PatternIndex:=0;
  WeightCheck:=(Amt>Loadcell.Value)
  MotionComplete:=false;
  while not MotionComplete do
    begin
{Current implementation finishes current move then stops}
      WeightCheck:=(Amt>Loadcell.Value);
      if Pattern = 1 then
        if not Motor.MoveIsFinished then
          yield
        else if (PatternIndex <3) then
          PatternIndex := PatternIndex+1
        else if (PatternIndex >= 3) then
          PatternIndex:=0;
        Motor.MoveBy(Container_ptrn1[PatternIndex])
{Current motor settings (256 microsteps w/ 4000 user units) motor spins ~2/3 of rev when told to move by 6}
      if Pattern = 2 then
        if not Motor.MoveIsFinished then
          yield
        else if (PatternIndex <3) then
          PatternIndex := PatternIndex+1
        else if (PatternIndex >= 3) then
          PatternIndex:=0;
        Motor.MoveBy(Container_ptrn2[PatternIndex])
    end;
end;

TRUE
TUserFunction
0 {reference}
FALSE
4
function MyFunction:longint;
  begin
  {your program goes here - remove the curly comment brackets}
  end;
TRUE
TUserVariable
287 {reference}
TRUE
dispensing
Boolean
FALSE
10
1
0
TUserVariable
0 {reference}
FALSE
MotionComplete
Boolean
FALSE
10
1
0
TUserFunction
289 {reference}
TRUE
11
procedure TestDispense(Motor:TDistributedT1Axis;rotations:integer);
  begin
  Motor.SetMotor(on);
  Motor.SetCurrent(2);
  Motor.SetSpeed(2);
  Motor.MoveBy(rotations);
  if Motor.MoveIsFinished then
    Motor.MoveBy(-1);
    Motor.SetCurrent(0);
    Motor.SetMotor(off);
  end;
TRUE
TUserProcedure
291 {reference}
FALSE
13
procedure TestDispense2(Motor:TDistributedT1Axis;rotations:integer);
  begin
  Motor.SetMotor(on);
  Motor.SetCurrent(2);
  Motor.SetSpeed(2);
  Motor.MoveBy(rotations);
 
  
  if Motor.MoveIsFinished then
    Motor.MoveBy(-1);
    Motor.SetCurrent(0);
    Motor.SetMotor(off);
  end;
TRUE
TUserVariable
296 {reference}
TRUE
TortillaSpeed
Number
FALSE
10
1
0
TUserVariable
309 {reference}
TRUE
GantryEnabledIndicator
boolean
FALSE
10
1
0
TUserVariable
310 {reference}
TRUE
DispenseCompleteIndie
boolean
FALSE
10
1
0
TUserVariable
314 {reference}
TRUE
ManualMode
boolean
FALSE
10
1
0
-1865940992
TRUE
FALSE
1
2
2000
TRUE
0
51
C:\Program Files (x86)\Snap2Motion\For_MMC\Resources\Remote Networks\MMC_Network.enc
0
